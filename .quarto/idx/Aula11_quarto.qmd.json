{"title":"Elaboração de Mapas","markdown":{"yaml":{"title":"Elaboração de Mapas","format":"html","warning":false,"message":false},"headingText":"Pacotes utilizados","containsRefs":false,"markdown":"\n\nQuando estamos trabalhando com algum dado, muitas vezes é necessário mostrar o local onde foi realizado o experimento. Através do Software R, é possível elaborar mapas que realizem essa função. Nesta página você irá aprender como criar mapas tradicionais, mapas indicando pontos de coordenadas e mapas interativos.\n\n\nPrimeiramente, deve-se instalar e carregar todos os pacotes que serão utilizados aqui.\n\n-   **tidyverse:** usado para manipulação, exploração e visualização de dados (essencial para a função `ggplot()`)\n-   **gsheet:** usado para importar dados do Google Sheets\n-   **rnaturalearth e rnaturalearthhires:** necessário para criação de mapas tradicionais. Para instalar o pacote `rnaturalearthhires` é preciso usar o comando `remotes::install_github(\"ropensci/rnaturalearthhires\")`\n-   **r4pde:** dados desse pacote foram usados para exemplificar como trabalhar com mapas junto a pontos de coordenadas\n-   **ggthemes:** usado para modificar o tema do gráfico\n-   **ggspatial:** usado para adicionar a Rosa dos Ventos no mapa\n-   **plotly:** permite criar mapas interativos\n-   **leaflet:** permite criar mapas interativos completos\n-   **ggrepel:** usado para colocar nomes no mapa\n-   **scatterpie:** usado para colocar gráficos de pizza dentro do mapa\n\n```{r}\nlibrary(tidyverse)\nlibrary(gsheet)\nremotes::install_github(\"ropensci/rnaturalearthhires\")\nlibrary(rnaturalearth)\nlibrary(rnaturalearthhires)\nlibrary(r4pde)\nlibrary(ggthemes)\nlibrary(ggspatial)\nlibrary(plotly)\nlibrary(leaflet)\nlibrary(ggrepel)\nlibrary(scatterpie)\nlibrary(knitr)\n```\n\n# Mapa tradicional\n\nUtilizando os pacotes `rnaturalearth` e `rnaturalearthhires` é possível elaborar mapas tradicionais de países e estados usando a função `ne_states()`. \n\nO primeiro passo é atribuir o país desejado a um objeto. Depois o mapa é plotado usando a função `ggplot()` juntamente com a função `geom_sf()`. Dentro do `geom_sf()`, é possível atribuir os argumentos de cor do mapa (`fill =`), cor das linhas de divisão (`color =`) e tamanho das linhas de divisão (`linewidth =`).\n\nAbaixo foi criado os mapas do Brasil, da Colômbia e do mundo inteiro. \n\n```{r}\nBRA <- ne_states(country = \"Brazil\",\n                 returnclass = \"sf\")\nggplot(BRA) +\n  geom_sf(fill = \"green\",\n          color = \"black\",\n          linewidth = 1)\n\n\nCOL <- ne_states(country = \"Colombia\",\n                 returnclass = \"sf\")\nggplot(COL)+\n  geom_sf(fill = \"yellow\",\n          color = \"black\")\n\n\nworld <- ne_countries()\nggplot(world)+\n  geom_sf(fill = \"white\")\n```\n\n## Trabalhando com coordenadas\n\nPara criar um mapa que contenha os pontos de coordenadas, primeiramente é necessário ter um conjunto de dados que apresente as informações de latitude e longitude. Tendo esses dados, o mapa pode ser criado usando as funções `ggplot()` e `geom_point()`.\n\nComo exemplo, foi utilizado o conjunto de dados `RustSoybean` integrado ao pacote `r4pde`. Esse conjunto de dados contém as informações de latitude e longitude de cada ponto. Ao criarmos um gráfico, as coordenadas são automaticamente reconhecidas pelo `ggplot()`.\n\n```{r}\nsbr <- RustSoybean\n\nsbr |> \n  ggplot(aes(longitude, latitude))+\n  geom_point()+\n  coord_sf()\n```\n\nAgora será adicionado esses pontos de coordenadas junto ao mapa do Brasil criado anteriormente.\n\n```{r}\nggplot(BRA)+\n  geom_sf(fill = \"green\",\n          color = \"black\",\n          linewidth = 1)+\n  geom_point(data = sbr, aes(longitude,latitude),\n             color = \"red\")\n```\n\nPara retirar a grade do fundo do mapa, pode ser usado a função `theme_map()` do pacote `ggthemes`.\n\n```{r}\nggplot(BRA)+\n  geom_sf(fill = \"green\",\n          color = \"black\",\n          linewidth = 1)+\n  geom_point(data = sbr, aes(longitude,latitude),\n             color = \"red\")+\n  theme_map()\n```\n\nPara adicionar a rosa-dos-ventos no mapa, pode ser usado a função `annotation_north_arrow()` do pacote `ggspatial`.\n\n```{r}\nggplot(BRA)+\n  geom_sf(fill = \"green\",\n          color = \"black\",\n          linewidth = 0.1)+\n  geom_point(data = sbr, aes(longitude,latitude), color = \"red\")+\n  theme_map()+\n  annotation_north_arrow()\n```\n\nCaso seja preciso destacar ou criar um mapa de apenas um estado, pode-se filtrar o estado desejado usando a função `filter()`. \n\nNo caso abaixo, foi destacado apenas o estado de Minas Gerais.\n\n```{r}\nMG <- BRA |> \n  filter(name_en == \"Minas Gerais\")\n\nggplot(BRA)+\n  geom_sf(fill = \"green\",\n          color = \"black\")+\n  geom_sf(data = MG, fill = \"yellow\")+\n  geom_point(data = sbr, aes(longitude,latitude), color = \"red\")+\n  theme_map()\n```\n\nNeste outro caso, foi criado um mapa apenas do estado de Minas Gerais.\n\n```{r}\nggplot(BRA)+\n  geom_sf(data = MG, fill = \"yellow\")+\n  theme_map()\n```\n\n## Mapa com coordenadas separadas em anos\n\nCaso o conjunto de dados tenha diferentes pontos de coordenadas em diferentes anos de experimento, pode ser criado um mapa para cada ano.\n\nUsando o mesmo conjunto de dados `RustSoybean`, o primeiro passo foi separar as datas dos dados em dias, meses e anos (no conjunto de dados essas informações estão todas juntas, sendo necessário separá-las). Isso foi feito através da função `separate()`\n\nO segundo passo foi criar o mapa usando o conjunto de dados transformado e usar a função `facet_wrap()` para dividir os mapas em diferentes anos.\n\n```{r}\nsbr2 <- sbr |>\n  separate(planting, into = \n             c(\"year\", \"month\", \"day\"), sep = \"-\", remove = FALSE)\n\nggplot(BRA)+\n  geom_sf(fill = \"white\",\n          color = \"black\")+\n  geom_point(data = sbr2, aes(longitude,latitude, color = year), alpha = 0.5)+\n  facet_wrap(~year)+\n  theme_map()\n```\n\n\n# Mapa interativo\n\nUm mapa interativo permite interagir com os pontos de coordenada. Esse tipo de mapa pode ser construído usando a função `ggplotly()` do pacote `plotly`.\n\nNo caso abaixo, foi utilizado o mesmo mapa e ponto de coordenadas trabalhados anteriormente.\n\n```{r}\nbra <- ggplot(BRA)+\n  geom_sf(fill = \"green\",\n          color = \"black\")+\n  geom_point(data = sbr, aes(longitude,latitude),\n             color = \"red\")\n\nggplotly(bra)\n```\n\n## Mapa interativo inteiro\n\nUsando a função `leaflet()` do pacote `leaflet`, é possível criar um mapa interativo inteiro, que pode ser arrastado e tem as funções de *zoom in* e *zoom out*.\n\nAdicionando a função `setView()` é possível especificar os pontos de coordenada que você deseja usar. No exemplo abaixo foi colocado as coordenadas da cidade de Viçosa, MG.\n\n```{r}\nleaflet() |> \n  addTiles()\n\nleaflet() |> \n  addTiles() |> \n  setView(lng = -42.8825, lat = -20.7546, zoom = 15) #Viçosa\n```\n\nSubstituindo a função `addTiles()` por `addProviderTiles()`, é possível mudar o modelo do mapa.\n\n```{r}\nleaflet() |> \n  addProviderTiles(providers$Esri.NatGeoWorldMap) |> \n  setView(lng = -42.8825, lat = -20.7546, zoom = 5) #Viçosa\n```\n\n## Trabalhando com coordenadas\n\nDo mesmo modo, também é possível criar esse tipo de mapa com pontos de coordenadas. Usando a função `addCircleMarkers()`, os pontos aparecem no mapa interativo inteiro.\n\nPara as coordenadas dos pontos, será utilizado o mesmo conjunto de dados trabalhado nos mapas anteriores.\n\n```{r}\nleaflet(sbr) |> \n  addTiles() |> \n  addCircleMarkers(radius = 1)\n```\n\n# Mapa com gráficos de pizza\n\nSe você tiver um conjunto de dados que compare a incidência de diferentes doenças em um mesmo ponto de coordenada e em diferentes locais, você pode criar um mapa que contenha gráficos de pizza mostrando a incidência das doenças de planta em cada região de interesse.\n\nPara adicionar os gráficos de pizza no mapa, será usado a função `geom_scatterpie()` do pacote `scatterpie`. E para adicionar o nome dos locais, será usado a função `geom_text_repel()` do pacote `ggrepel`.\n\nPara criar esse mapa, foi usado um novo conjunto de dados, importado através da função `gsheet2tbl()` do pacote `gsheet`.\n\n```{r}\nmapa <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1pAIFKsdKxk_UQQXdYwIO-O5NOkYNhpclImJcLziYnk4/edit?usp=sharing\")\n\nggplot(BRA) +\n  geom_sf(fill = \"gray70\", alpha = 0.5, color = \"white\") +\n  coord_sf()+\n  geom_scatterpie(aes(x = lon, y = lat, r = 0.6), alpha = 0.8, color = NA, data = mapa,\n                  cols = c(\"DFC\",\n                           \"MA\",\n                           \"FER\",\n                           \"ANTR\",\n                           \"OIDIO\"))+\n  geom_text_repel(data = mapa, aes(lon, lat, label = Local),\n                   size = 2, nudge_x = 0.2, nudge_y = 0.27, color = \"gray30\") +\n  ggthemes::scale_fill_calc()+\n  ggthemes::theme_map() +\n  labs(x = \"Longitude\", y = \"Latitude\", legend = \"\", fill = \"Doença\")+\n  theme(legend.position = \"bottom\", text = element_text(size = 8))\n```\n","srcMarkdownNoYaml":"\n\nQuando estamos trabalhando com algum dado, muitas vezes é necessário mostrar o local onde foi realizado o experimento. Através do Software R, é possível elaborar mapas que realizem essa função. Nesta página você irá aprender como criar mapas tradicionais, mapas indicando pontos de coordenadas e mapas interativos.\n\n# Pacotes utilizados\n\nPrimeiramente, deve-se instalar e carregar todos os pacotes que serão utilizados aqui.\n\n-   **tidyverse:** usado para manipulação, exploração e visualização de dados (essencial para a função `ggplot()`)\n-   **gsheet:** usado para importar dados do Google Sheets\n-   **rnaturalearth e rnaturalearthhires:** necessário para criação de mapas tradicionais. Para instalar o pacote `rnaturalearthhires` é preciso usar o comando `remotes::install_github(\"ropensci/rnaturalearthhires\")`\n-   **r4pde:** dados desse pacote foram usados para exemplificar como trabalhar com mapas junto a pontos de coordenadas\n-   **ggthemes:** usado para modificar o tema do gráfico\n-   **ggspatial:** usado para adicionar a Rosa dos Ventos no mapa\n-   **plotly:** permite criar mapas interativos\n-   **leaflet:** permite criar mapas interativos completos\n-   **ggrepel:** usado para colocar nomes no mapa\n-   **scatterpie:** usado para colocar gráficos de pizza dentro do mapa\n\n```{r}\nlibrary(tidyverse)\nlibrary(gsheet)\nremotes::install_github(\"ropensci/rnaturalearthhires\")\nlibrary(rnaturalearth)\nlibrary(rnaturalearthhires)\nlibrary(r4pde)\nlibrary(ggthemes)\nlibrary(ggspatial)\nlibrary(plotly)\nlibrary(leaflet)\nlibrary(ggrepel)\nlibrary(scatterpie)\nlibrary(knitr)\n```\n\n# Mapa tradicional\n\nUtilizando os pacotes `rnaturalearth` e `rnaturalearthhires` é possível elaborar mapas tradicionais de países e estados usando a função `ne_states()`. \n\nO primeiro passo é atribuir o país desejado a um objeto. Depois o mapa é plotado usando a função `ggplot()` juntamente com a função `geom_sf()`. Dentro do `geom_sf()`, é possível atribuir os argumentos de cor do mapa (`fill =`), cor das linhas de divisão (`color =`) e tamanho das linhas de divisão (`linewidth =`).\n\nAbaixo foi criado os mapas do Brasil, da Colômbia e do mundo inteiro. \n\n```{r}\nBRA <- ne_states(country = \"Brazil\",\n                 returnclass = \"sf\")\nggplot(BRA) +\n  geom_sf(fill = \"green\",\n          color = \"black\",\n          linewidth = 1)\n\n\nCOL <- ne_states(country = \"Colombia\",\n                 returnclass = \"sf\")\nggplot(COL)+\n  geom_sf(fill = \"yellow\",\n          color = \"black\")\n\n\nworld <- ne_countries()\nggplot(world)+\n  geom_sf(fill = \"white\")\n```\n\n## Trabalhando com coordenadas\n\nPara criar um mapa que contenha os pontos de coordenadas, primeiramente é necessário ter um conjunto de dados que apresente as informações de latitude e longitude. Tendo esses dados, o mapa pode ser criado usando as funções `ggplot()` e `geom_point()`.\n\nComo exemplo, foi utilizado o conjunto de dados `RustSoybean` integrado ao pacote `r4pde`. Esse conjunto de dados contém as informações de latitude e longitude de cada ponto. Ao criarmos um gráfico, as coordenadas são automaticamente reconhecidas pelo `ggplot()`.\n\n```{r}\nsbr <- RustSoybean\n\nsbr |> \n  ggplot(aes(longitude, latitude))+\n  geom_point()+\n  coord_sf()\n```\n\nAgora será adicionado esses pontos de coordenadas junto ao mapa do Brasil criado anteriormente.\n\n```{r}\nggplot(BRA)+\n  geom_sf(fill = \"green\",\n          color = \"black\",\n          linewidth = 1)+\n  geom_point(data = sbr, aes(longitude,latitude),\n             color = \"red\")\n```\n\nPara retirar a grade do fundo do mapa, pode ser usado a função `theme_map()` do pacote `ggthemes`.\n\n```{r}\nggplot(BRA)+\n  geom_sf(fill = \"green\",\n          color = \"black\",\n          linewidth = 1)+\n  geom_point(data = sbr, aes(longitude,latitude),\n             color = \"red\")+\n  theme_map()\n```\n\nPara adicionar a rosa-dos-ventos no mapa, pode ser usado a função `annotation_north_arrow()` do pacote `ggspatial`.\n\n```{r}\nggplot(BRA)+\n  geom_sf(fill = \"green\",\n          color = \"black\",\n          linewidth = 0.1)+\n  geom_point(data = sbr, aes(longitude,latitude), color = \"red\")+\n  theme_map()+\n  annotation_north_arrow()\n```\n\nCaso seja preciso destacar ou criar um mapa de apenas um estado, pode-se filtrar o estado desejado usando a função `filter()`. \n\nNo caso abaixo, foi destacado apenas o estado de Minas Gerais.\n\n```{r}\nMG <- BRA |> \n  filter(name_en == \"Minas Gerais\")\n\nggplot(BRA)+\n  geom_sf(fill = \"green\",\n          color = \"black\")+\n  geom_sf(data = MG, fill = \"yellow\")+\n  geom_point(data = sbr, aes(longitude,latitude), color = \"red\")+\n  theme_map()\n```\n\nNeste outro caso, foi criado um mapa apenas do estado de Minas Gerais.\n\n```{r}\nggplot(BRA)+\n  geom_sf(data = MG, fill = \"yellow\")+\n  theme_map()\n```\n\n## Mapa com coordenadas separadas em anos\n\nCaso o conjunto de dados tenha diferentes pontos de coordenadas em diferentes anos de experimento, pode ser criado um mapa para cada ano.\n\nUsando o mesmo conjunto de dados `RustSoybean`, o primeiro passo foi separar as datas dos dados em dias, meses e anos (no conjunto de dados essas informações estão todas juntas, sendo necessário separá-las). Isso foi feito através da função `separate()`\n\nO segundo passo foi criar o mapa usando o conjunto de dados transformado e usar a função `facet_wrap()` para dividir os mapas em diferentes anos.\n\n```{r}\nsbr2 <- sbr |>\n  separate(planting, into = \n             c(\"year\", \"month\", \"day\"), sep = \"-\", remove = FALSE)\n\nggplot(BRA)+\n  geom_sf(fill = \"white\",\n          color = \"black\")+\n  geom_point(data = sbr2, aes(longitude,latitude, color = year), alpha = 0.5)+\n  facet_wrap(~year)+\n  theme_map()\n```\n\n\n# Mapa interativo\n\nUm mapa interativo permite interagir com os pontos de coordenada. Esse tipo de mapa pode ser construído usando a função `ggplotly()` do pacote `plotly`.\n\nNo caso abaixo, foi utilizado o mesmo mapa e ponto de coordenadas trabalhados anteriormente.\n\n```{r}\nbra <- ggplot(BRA)+\n  geom_sf(fill = \"green\",\n          color = \"black\")+\n  geom_point(data = sbr, aes(longitude,latitude),\n             color = \"red\")\n\nggplotly(bra)\n```\n\n## Mapa interativo inteiro\n\nUsando a função `leaflet()` do pacote `leaflet`, é possível criar um mapa interativo inteiro, que pode ser arrastado e tem as funções de *zoom in* e *zoom out*.\n\nAdicionando a função `setView()` é possível especificar os pontos de coordenada que você deseja usar. No exemplo abaixo foi colocado as coordenadas da cidade de Viçosa, MG.\n\n```{r}\nleaflet() |> \n  addTiles()\n\nleaflet() |> \n  addTiles() |> \n  setView(lng = -42.8825, lat = -20.7546, zoom = 15) #Viçosa\n```\n\nSubstituindo a função `addTiles()` por `addProviderTiles()`, é possível mudar o modelo do mapa.\n\n```{r}\nleaflet() |> \n  addProviderTiles(providers$Esri.NatGeoWorldMap) |> \n  setView(lng = -42.8825, lat = -20.7546, zoom = 5) #Viçosa\n```\n\n## Trabalhando com coordenadas\n\nDo mesmo modo, também é possível criar esse tipo de mapa com pontos de coordenadas. Usando a função `addCircleMarkers()`, os pontos aparecem no mapa interativo inteiro.\n\nPara as coordenadas dos pontos, será utilizado o mesmo conjunto de dados trabalhado nos mapas anteriores.\n\n```{r}\nleaflet(sbr) |> \n  addTiles() |> \n  addCircleMarkers(radius = 1)\n```\n\n# Mapa com gráficos de pizza\n\nSe você tiver um conjunto de dados que compare a incidência de diferentes doenças em um mesmo ponto de coordenada e em diferentes locais, você pode criar um mapa que contenha gráficos de pizza mostrando a incidência das doenças de planta em cada região de interesse.\n\nPara adicionar os gráficos de pizza no mapa, será usado a função `geom_scatterpie()` do pacote `scatterpie`. E para adicionar o nome dos locais, será usado a função `geom_text_repel()` do pacote `ggrepel`.\n\nPara criar esse mapa, foi usado um novo conjunto de dados, importado através da função `gsheet2tbl()` do pacote `gsheet`.\n\n```{r}\nmapa <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1pAIFKsdKxk_UQQXdYwIO-O5NOkYNhpclImJcLziYnk4/edit?usp=sharing\")\n\nggplot(BRA) +\n  geom_sf(fill = \"gray70\", alpha = 0.5, color = \"white\") +\n  coord_sf()+\n  geom_scatterpie(aes(x = lon, y = lat, r = 0.6), alpha = 0.8, color = NA, data = mapa,\n                  cols = c(\"DFC\",\n                           \"MA\",\n                           \"FER\",\n                           \"ANTR\",\n                           \"OIDIO\"))+\n  geom_text_repel(data = mapa, aes(lon, lat, label = Local),\n                   size = 2, nudge_x = 0.2, nudge_y = 0.27, color = \"gray30\") +\n  ggthemes::scale_fill_calc()+\n  ggthemes::theme_map() +\n  labs(x = \"Longitude\", y = \"Latitude\", legend = \"\", fill = \"Doença\")+\n  theme(legend.position = \"bottom\", text = element_text(size = 8))\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"Aula11_quarto.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.353","editor":"visual","theme":{"light":"flatly","dark":"darkly"},"title":"Elaboração de Mapas","message":false},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}