{"title":"Aula 1","markdown":{"yaml":{"title":"Aula 1","author":"Carlos","format":"html","warning":false,"message":false},"headingText":"Aprendendo a utilizar o R Quarto Markdown","containsRefs":false,"markdown":"\n\n\nNessa primeira aula aprendemos a criar e utilizar o R Quarto Markdown e vimos algumas funções básicas do R.\n\n## R Quarto Markdown\n\nO **Quarto** é uma versão mais avançada e atualizada do R Markdown, incluindo dezenas de novos recursos e sendo capaz de renderizar a maioria dos arquivos `.Rmd` existentes sem modificação, possibilitando a criação de relatórios ou textos em diferentes formatos (HTML, PDF, Word e outros).\n\nPara a criação de um documento R Quarto Markdown, deve-se clicar em *New File* e posteriormente em *Quarto Document*. Após nomear o arquivo e escolher o formato em que ele será renderizado, ele estará pronto para ser usado\n\n## RStudio Project\n\nUma forma de manter o trabalho organizado é usando o **RStudio Projects**. Ele mantém todos os scripts, documentos e dados em um único lugar, deixando-os separados de outros arquivos e projetos. Isso permite trabalhar com diferentes projetos ao mesmo tempo sem um interferir no outro.\n\nPara criar um novo projeto, é necessário clicar em *File*, depois *New Project*, escolher um *directory* existente ou criar um novo e nomear o projeto.\n\n## Chunk\n\nAntes de tudo, para que possamos utilizar o R Quarto Markdown e executar pedaços de códigos que serão integrados ao documento, devemos criar um **chunk**. O **chunk** permite que as funções e demais códigos sejam executadas e rodadas no documento. Um atalho que pode ser usado para sua criação é o Ctrl + Alt + I.\n\n## Texto\n\nDurante a escrita, podemos colocar palavras em *itálico* usando 1 asterisco, do mesmo modo podemos colocar palavras em **negrito** usando 2 asteriscos.\n\nDentro de um chunk, podemos colocar palavras e/ou frases entre aspas ou com um `#` na frente para que ele seja rodado como um texto, e não como dado.\n\n## Atribuição de Valores\n\nQuando queremos atribuir um valor para algum nome, podemos utilizar `<-`. Desse modo, se quisermos trabalhar com esses valores ou conjunto de valores atribuídos a um nome, podemos utilizar diretamente o nome, sem precisar repetir o valor.\n\n```{r}\nx <- 10\nx\n\ny <- x*10\ny\n\nz <- x*y\nz\n```\n\n## Conjunto de valores e data frame\n\nPara criar um conjunto de valores, pode-se utilizar `c()`e colocar os valores desejados. Caso os valores sejam contínuos, pode-se agrupá-los usando `:`, desse modo o conjunto será formado por todos os valores que estão entre os dois números colocados.\n\n```{r}\nA <- c(1:10)\nA\nB <- c(11:20)\nB\n```\n\nO *data frame* é uma estrutura em que os dados podem ser organizados em formato de tabela. Ele pode ser criado por meio da junção de dois ou mais conjunto de dados, usando a função `data.frame()`, mas, para isso, o número de valores presentes nos conjuntos deve ser o mesmo.\n\n```{r}\ndf <- data.frame(A,B)\ndf\n```\n\n## Package, library e help\n\nOs *packages* ou pacotes são conjunto de funções, dados e documentações que podem ser instalados a fim de estender a funcionalidade do R. Para instalar novos pacotes, usamos a função `install.packages()`e chamamos o nome do pacote desejado.\n\nPara que o pacote instalado seja ativado e possa ser utilizado no nosso documento, é necessário chamá-lo pela função `library()`.\n\nPara tirar dúvida de como um pacote funciona e quais são as funções e dados presentes dentro dele, pode-se utilizar `?` com o nome do pacote para aparecer todas as informações pertinentes sobre ele. Para aprender sobre uma determinada função, pode-se utilizar também `??`.\n\n```{r}\nlibrary(agricolae)\n??audpc\ndates<-c(14,21,28) # days\n# example 1: evaluation - vector\nevaluation<-c(40,80,90)\naudpc(evaluation,dates)\n\n```\n\n## Pipe\n\nQuando quisermos que todas as funções executadas estejam se referindo a um determinado *data frame* sem precisar chamá-lo repetidamente, podemos usar um **pipe**. O pipe, executado por `|>`ou `%>%`, indica que todas as funções abaixo dele estão se referindo ao *data frame* especificado. Um atalho para a criação do pipe é Ctrl + Shift + M.\n\n```{r}\ndf2 <- cars\ncars\ndf2$dist2 <- c(1:50) # O $ é usado para criar uma nova coluna dentro do df2\ndf2\n\nlibrary(tidyverse)\n\ndf2 |>\n  mutate(dist3 = dist2+1) |> \n  select(1)\n```\n\n# Renderização\n\nPara transformar esse documento `.qmd` em HTML ou em outros formatos, é necessário renderizar o documento. Para isso basta clicar no **Render** para que o documento ou site seja criado.\n","srcMarkdownNoYaml":"\n\n# Aprendendo a utilizar o R Quarto Markdown\n\nNessa primeira aula aprendemos a criar e utilizar o R Quarto Markdown e vimos algumas funções básicas do R.\n\n## R Quarto Markdown\n\nO **Quarto** é uma versão mais avançada e atualizada do R Markdown, incluindo dezenas de novos recursos e sendo capaz de renderizar a maioria dos arquivos `.Rmd` existentes sem modificação, possibilitando a criação de relatórios ou textos em diferentes formatos (HTML, PDF, Word e outros).\n\nPara a criação de um documento R Quarto Markdown, deve-se clicar em *New File* e posteriormente em *Quarto Document*. Após nomear o arquivo e escolher o formato em que ele será renderizado, ele estará pronto para ser usado\n\n## RStudio Project\n\nUma forma de manter o trabalho organizado é usando o **RStudio Projects**. Ele mantém todos os scripts, documentos e dados em um único lugar, deixando-os separados de outros arquivos e projetos. Isso permite trabalhar com diferentes projetos ao mesmo tempo sem um interferir no outro.\n\nPara criar um novo projeto, é necessário clicar em *File*, depois *New Project*, escolher um *directory* existente ou criar um novo e nomear o projeto.\n\n## Chunk\n\nAntes de tudo, para que possamos utilizar o R Quarto Markdown e executar pedaços de códigos que serão integrados ao documento, devemos criar um **chunk**. O **chunk** permite que as funções e demais códigos sejam executadas e rodadas no documento. Um atalho que pode ser usado para sua criação é o Ctrl + Alt + I.\n\n## Texto\n\nDurante a escrita, podemos colocar palavras em *itálico* usando 1 asterisco, do mesmo modo podemos colocar palavras em **negrito** usando 2 asteriscos.\n\nDentro de um chunk, podemos colocar palavras e/ou frases entre aspas ou com um `#` na frente para que ele seja rodado como um texto, e não como dado.\n\n## Atribuição de Valores\n\nQuando queremos atribuir um valor para algum nome, podemos utilizar `<-`. Desse modo, se quisermos trabalhar com esses valores ou conjunto de valores atribuídos a um nome, podemos utilizar diretamente o nome, sem precisar repetir o valor.\n\n```{r}\nx <- 10\nx\n\ny <- x*10\ny\n\nz <- x*y\nz\n```\n\n## Conjunto de valores e data frame\n\nPara criar um conjunto de valores, pode-se utilizar `c()`e colocar os valores desejados. Caso os valores sejam contínuos, pode-se agrupá-los usando `:`, desse modo o conjunto será formado por todos os valores que estão entre os dois números colocados.\n\n```{r}\nA <- c(1:10)\nA\nB <- c(11:20)\nB\n```\n\nO *data frame* é uma estrutura em que os dados podem ser organizados em formato de tabela. Ele pode ser criado por meio da junção de dois ou mais conjunto de dados, usando a função `data.frame()`, mas, para isso, o número de valores presentes nos conjuntos deve ser o mesmo.\n\n```{r}\ndf <- data.frame(A,B)\ndf\n```\n\n## Package, library e help\n\nOs *packages* ou pacotes são conjunto de funções, dados e documentações que podem ser instalados a fim de estender a funcionalidade do R. Para instalar novos pacotes, usamos a função `install.packages()`e chamamos o nome do pacote desejado.\n\nPara que o pacote instalado seja ativado e possa ser utilizado no nosso documento, é necessário chamá-lo pela função `library()`.\n\nPara tirar dúvida de como um pacote funciona e quais são as funções e dados presentes dentro dele, pode-se utilizar `?` com o nome do pacote para aparecer todas as informações pertinentes sobre ele. Para aprender sobre uma determinada função, pode-se utilizar também `??`.\n\n```{r}\nlibrary(agricolae)\n??audpc\ndates<-c(14,21,28) # days\n# example 1: evaluation - vector\nevaluation<-c(40,80,90)\naudpc(evaluation,dates)\n\n```\n\n## Pipe\n\nQuando quisermos que todas as funções executadas estejam se referindo a um determinado *data frame* sem precisar chamá-lo repetidamente, podemos usar um **pipe**. O pipe, executado por `|>`ou `%>%`, indica que todas as funções abaixo dele estão se referindo ao *data frame* especificado. Um atalho para a criação do pipe é Ctrl + Shift + M.\n\n```{r}\ndf2 <- cars\ncars\ndf2$dist2 <- c(1:50) # O $ é usado para criar uma nova coluna dentro do df2\ndf2\n\nlibrary(tidyverse)\n\ndf2 |>\n  mutate(dist3 = dist2+1) |> \n  select(1)\n```\n\n# Renderização\n\nPara transformar esse documento `.qmd` em HTML ou em outros formatos, é necessário renderizar o documento. Para isso basta clicar no **Render** para que o documento ou site seja criado.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"Aula1_quarto.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.353","editor":"visual","theme":"cosmo","title":"Aula 1","author":"Carlos","message":false},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}