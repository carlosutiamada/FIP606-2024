{
  "hash": "9d622b363e750055a48411f154ffa0de",
  "result": {
    "markdown": "---\ntitle: \"Regressão\"\nformat: html\nmessage: false\nwarning: false\n---\n\n\n# Pacotes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(lme4)\nlibrary(car)\n```\n:::\n\n\n# Regressão linear\n\nA regressão é uma técnica estatística utilizada para modelar e analisar a relação entre uma variável dependente (ou resposta) e uma ou mais variáveis independentes (ou preditoras). O objetivo principal da regressão é entender como a variável dependente varia quando as variáveis independentes mudam e usar essa compreensão para fazer previsões.\n\n## Importação dos dados\n\nO conjunto de dados foi importado a partir do Google Sheet através da função `gsheet2tbl()` do pacote `gsheet`. \n\nEsse conjunto de dados é composto pelo *trat*, que é o percentual de sementes inoculados com patógenos e *nplants*, que é o número de plantas emergidas no campo. Estima-se que o aumento da concentração de inóculo irá diminuir a estande de plantas no cmapo. O fator de concentração de inóculo é um fator numérico contínuo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gsheet)\nestande <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=401662555\")\n```\n:::\n\n\n## Visualização dos dados\n\nForam criados gráficos de pontos com intervalos de confiança. Os gráficos foram criados usando as funções `ggplot()`, `geom_jitter()` e `stat_summary` (para criar os pontos médios e intervalos de confiança). \n\nTambém foi usada a função `geom_smooth()` com o argumento `method = \"lm\"` para criar uma linha de tendência no gráfico ajustado ao modelo linear, mostrando a tendência que os dados possuem de aumentar ou diminuir em função do eixo X.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nestande |> \n  ggplot(aes(trat, nplants))+\n  geom_jitter(width = 0.1, color = \"gray\")+\n  facet_wrap(~exp)+\n  stat_summary(fun.data = \"mean_cl_boot\", color = \"blue\")+\n  geom_smooth(method = \"lm\", se = F)\n```\n\n::: {.cell-output-display}\n![](Aula9_quarto_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\nestande |> \n  ggplot(aes(trat, nplants, color = factor(exp)))+\n  geom_jitter(width = 0.1, color = \"gray\")+\n  stat_summary(fun.data = \"mean_cl_boot\", color = \"blue\")+\n  geom_smooth(method = \"lm\", se = F)\n```\n\n::: {.cell-output-display}\n![](Aula9_quarto_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n:::\n\n\n## Regressão linear do experimento 1\n\nInicialmente foi filtrado apenas o experimento 1 do conjunto de dados usando a função `filter()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexp1 <- estande |> \n  filter(exp == 1)\n```\n:::\n\n\nDepois foi plotado um gráfico do experimento 1 usando as funções `ggplot()`, `geom_point()` e `geom_smooth()` (dessa vez sem nenhum ajuste de modelo).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexp1 |> \n  ggplot(aes(trat, nplants))+\n  geom_point()+\n  ylim(0,100)+\n  geom_smooth(se = F)\n```\n\n::: {.cell-output-display}\n![](Aula9_quarto_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nPode-se observar pelo gráfico que a linha de tendência se assemelha a uma reta (modelo linear).\n\nPara ajustar os dados em um modelo linear, foi usada a função `lm()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm1 <- lm(nplants ~ trat,\n          data = exp1)\nsummary(lm1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = nplants ~ trat, data = exp1)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-25.500  -6.532   1.758   8.573  27.226 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  52.5000     4.2044  12.487 1.84e-11 ***\ntrat         -0.2419     0.1859  -1.301    0.207    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 15 on 22 degrees of freedom\nMultiple R-squared:  0.07148,\tAdjusted R-squared:  0.02928 \nF-statistic: 1.694 on 1 and 22 DF,  p-value: 0.2066\n```\n:::\n:::\n\n\nA partir da função `summary()`, é possível inferir que a taxa de redução da variável resposta em função do eixo X é de -0.24, ou seja, para cada unidade de X reduz o Y em -0.24.\n\nAlém disso, o p-valor é informado, sendo igual a 0.2066, ou seja, é superior ao nível de significância e não se pode rejeitar a hipótese nula (Ho: a taxa de redução é igual a 0).\n\nOutra alternativa para realizar a regressão linear é usando a função `glm()` e o argumento `family = \"gaussian\"`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglm1 <- glm(nplants ~ trat,\n            family = \"gaussian\",\n            data = exp1)\nsummary(glm1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nglm(formula = nplants ~ trat, family = \"gaussian\", data = exp1)\n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  52.5000     4.2044  12.487 1.84e-11 ***\ntrat         -0.2419     0.1859  -1.301    0.207    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for gaussian family taken to be 224.9751)\n\n    Null deviance: 5330.5  on 23  degrees of freedom\nResidual deviance: 4949.5  on 22  degrees of freedom\nAIC: 202\n\nNumber of Fisher Scoring iterations: 2\n```\n:::\n:::\n\n\nA família gaussiana envolve o mesmo método do \"lm\", resultando na mesma taxa de redução.\n\n## Regressão linear do experimento 2\n\nInicialmente foi filtrado apenas o experimento 2 do conjunto de dados usando a função `filter()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexp2 <- estande |> \n  filter (exp == 2)\n```\n:::\n\n\nO mesmo gráfico foi montado para o experimento 2.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexp2 |> \n  ggplot(aes(trat, nplants))+\n  geom_point()+\n  ylim(0,100)+\n  geom_smooth(method = lm, se = F)\n```\n\n::: {.cell-output-display}\n![](Aula9_quarto_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nPelo gráfico é possível observar uma diminuição dos valores de Y em função do eixo X.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm2 <- lm(nplants ~ trat,\n          data = exp2)\nsummary(lm2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = nplants ~ trat, data = exp2)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-25.7816  -7.7150   0.5653   8.1929  19.2184 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  60.9857     3.6304  16.798 4.93e-14 ***\ntrat         -0.7007     0.1605  -4.365 0.000247 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 12.95 on 22 degrees of freedom\nMultiple R-squared:  0.4641,\tAdjusted R-squared:  0.4398 \nF-statistic: 19.05 on 1 and 22 DF,  p-value: 0.0002473\n```\n:::\n:::\n\n\nO resultado do modelo linear indica que a taxa de redução desses dados é de -0.70, ou seja, para cada unidade de X reduz o Y em -0.70.\n\nNesse experimento nota-se que o p-valor foi inferior ao nível de significância, indicando que a hipótese nula de que a taxa de redução é igual a 0 é rejeitada, ou seja, há uma regressão.\n\nAjustando o modelo pelo método do GLM, pode ser utilizado duas famílias: `family = \"gaussian\"` e `family = \"log\"`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglm2 <- glm(nplants ~ trat,\n            family = \"gaussian\",\n            data = exp2)\nsummary(glm2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nglm(formula = nplants ~ trat, family = \"gaussian\", data = exp2)\n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  60.9857     3.6304  16.798 4.93e-14 ***\ntrat         -0.7007     0.1605  -4.365 0.000247 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for gaussian family taken to be 167.7464)\n\n    Null deviance: 6886.6  on 23  degrees of freedom\nResidual deviance: 3690.4  on 22  degrees of freedom\nAIC: 194.96\n\nNumber of Fisher Scoring iterations: 2\n```\n:::\n\n```{.r .cell-code}\nAIC(glm2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 194.9597\n```\n:::\n\n```{.r .cell-code}\nglm2b <- glm(nplants ~ trat,\n             family = poisson(link = \"log\"),\n             data = exp2)\nsummary(glm2b)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nglm(formula = nplants ~ trat, family = poisson(link = \"log\"), \n    data = exp2)\n\nCoefficients:\n             Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  4.134189   0.037583 110.003  < 2e-16 ***\ntrat        -0.016270   0.002059  -7.901 2.76e-15 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 139.783  on 23  degrees of freedom\nResidual deviance:  69.578  on 22  degrees of freedom\nAIC: 210.24\n\nNumber of Fisher Scoring iterations: 4\n```\n:::\n\n```{.r .cell-code}\nAIC(glm2b)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 210.2353\n```\n:::\n:::\n\n\nA função `AIC()` compara os dois métodos (famílias diferentes) e fornece qual deles melhor representa o conjunto de dados. Sempre o menor valor é o mais recomendado. Nesse caso, usando a família gaussiana, o valor de AIC foi menor, sendo o modelo que melhor representa os dados.\n\n## Regressão linear do experimento 3\n\nInicialmente foi filtrado apenas o experimento 3 do conjunto de dados usando a função `filter()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexp3 <- estande |> \n  filter (exp == 3)\n```\n:::\n\n\nO mesmo gráfico foi montado para o experimento 3.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexp3 |> \n  ggplot(aes(trat, nplants))+\n  geom_point()+\n  ylim(0,100)+\n  geom_smooth(method = lm, se = F)\n```\n\n::: {.cell-output-display}\n![](Aula9_quarto_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nPelo gráfico é possível observar uma diminuição dos valores de Y em função do eixo X.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm3 <- lm(nplants ~ trat,\n          data = exp3)\nsummary(lm3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = nplants ~ trat, data = exp3)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-26.5887  -3.9597   0.7177   5.5806  19.8952 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  95.7500     2.9529  32.425  < 2e-16 ***\ntrat         -0.7634     0.1306  -5.847 6.97e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 10.53 on 22 degrees of freedom\nMultiple R-squared:  0.6085,\tAdjusted R-squared:  0.5907 \nF-statistic: 34.19 on 1 and 22 DF,  p-value: 6.968e-06\n```\n:::\n:::\n\n\nO resultado do modelo linear indica que a taxa de redução desses dados é de -0.76, ou seja, para cada unidade de X reduz o Y em -0.76.\n\nNesse experimento nota-se que o p-valor foi inferior ao nível de significância, indicando que a hipótese nula de que a taxa de redução é igual a 0 é rejeitada, ou seja, há uma regressão.\n\nO coeficiente de determinação (adjusted R-squared) fornecido é igual a 59%, o que indica que 59% da variabilidade do Y (número de plantas) é explicado pelo X (inóculo), sendo o máximo desse coeficiente igual a 1.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglm3 <- glm(nplants ~ trat,\n            family = \"gaussian\",\n            data = exp3)\nsummary(glm3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nglm(formula = nplants ~ trat, family = \"gaussian\", data = exp3)\n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  95.7500     2.9529  32.425  < 2e-16 ***\ntrat         -0.7634     0.1306  -5.847 6.97e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for gaussian family taken to be 110.9787)\n\n    Null deviance: 6235.8  on 23  degrees of freedom\nResidual deviance: 2441.5  on 22  degrees of freedom\nAIC: 185.04\n\nNumber of Fisher Scoring iterations: 2\n```\n:::\n\n```{.r .cell-code}\nAIC(glm3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 185.0449\n```\n:::\n\n```{.r .cell-code}\nglm3b <- glm(nplants ~ trat,\n             family = poisson(link = \"log\"),\n             data = exp3)\nsummary(glm3b)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nglm(formula = nplants ~ trat, family = poisson(link = \"log\"), \n    data = exp3)\n\nCoefficients:\n             Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  4.571590   0.029539 154.762  < 2e-16 ***\ntrat        -0.009965   0.001488  -6.697 2.13e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 77.906  on 23  degrees of freedom\nResidual deviance: 29.952  on 22  degrees of freedom\nAIC: 183.93\n\nNumber of Fisher Scoring iterations: 4\n```\n:::\n\n```{.r .cell-code}\nAIC(glm3b) #melhor qualidade de ajuste, quanto menor é melhor (mais ajustado)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 183.9324\n```\n:::\n:::\n\n\nPara esse conjunto de dados, a família log resultou em um menor valor de AIC, o que indica que esse modelo melhor representa os dados que a família gaussiana.\n\nTransformando o log dos tratamentos, os dados ficam mais linearizados (diminui a curva).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexp3 |> \n  ggplot(aes(log(trat), nplants))+\n  geom_point()+\n  ylim(0,100)+\n  geom_smooth(se = F)\n```\n\n::: {.cell-output-display}\n![](Aula9_quarto_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n## Regressão linear geral\n\nPegandos os dados inteiros, foi realizado o ajuste do modelo usando o GLM tanto com a família gaussianda quanto por log e depois foi comparado os dois modelos com o AIC.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(lme4)\nglm4 <- glmer(nplants ~ trat + (trat|exp),\n            family = \"gaussian\",\n            data = estande)\nsummary(glm4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nLinear mixed model fit by REML ['lmerMod']\nFormula: nplants ~ trat + (trat | exp)\n   Data: estande\n\nREML criterion at convergence: 580.8\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-2.0988 -0.6091  0.1722  0.6360  1.9963 \n\nRandom effects:\n Groups   Name        Variance  Std.Dev. Corr \n exp      (Intercept) 510.68405 22.5983       \n          trat          0.05516  0.2349  -0.82\n Residual             167.91303 12.9581       \nNumber of obs: 72, groups:  exp, 3\n\nFixed effects:\n            Estimate Std. Error t value\n(Intercept)  69.7452    13.2146   5.278\ntrat         -0.5687     0.1643  -3.462\n\nCorrelation of Fixed Effects:\n     (Intr)\ntrat -0.731\noptimizer (nloptwrap) convergence code: 0 (OK)\nModel failed to converge with max|grad| = 0.00274249 (tol = 0.002, component 1)\n```\n:::\n\n```{.r .cell-code}\nAIC(glm4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 592.8402\n```\n:::\n\n```{.r .cell-code}\nglm4b <- glmer(nplants ~ trat + (trat|exp),   #(trat|exp) é o efeito aleatório\n             family = poisson(link = \"log\"),\n             data = estande)\nsummary(glm4b)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nGeneralized linear mixed model fit by maximum likelihood (Laplace\n  Approximation) [glmerMod]\n Family: poisson  ( log )\nFormula: nplants ~ trat + (trat | exp)\n   Data: estande\n\n     AIC      BIC   logLik deviance df.resid \n   660.7    672.1   -325.4    650.7       67 \n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.6247 -0.8083  0.1042  0.9601  3.6511 \n\nRandom effects:\n Groups Name        Variance  Std.Dev. Corr \n exp    (Intercept) 6.425e-02 0.253478      \n        trat        1.602e-05 0.004003 -0.17\nNumber of obs: 72, groups:  exp, 3\n\nFixed effects:\n             Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  4.223397   0.147793  28.577  < 2e-16 ***\ntrat        -0.010434   0.002538  -4.111 3.93e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n     (Intr)\ntrat -0.192\n```\n:::\n\n```{.r .cell-code}\nAIC(glm4b)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 660.7282\n```\n:::\n:::\n\n\nUsando a família gaussianda, nota-se que o AIC obtido foi menor, indicando que, no geral, esse modelo é o que melhor representa o conjunto de dados.\n\n# Regressão linear - conjunto de dados 2\n\nPara uma nova regressão linear, um novo conjunto de dados foi importado a partir do pacote `r4pde`. O conjunto de dados é denominado de WhiteMoldSoybean.\n\nA regressão linear será usada para prever a produtividade da soja em função da incidência do mofo branco.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(r4pde)\n\nwm <- WhiteMoldSoybean\n```\n:::\n\n\n## Visualização dos dados\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwm |> \n  ggplot(aes(inc, yld, group = factor(study)))+\n  geom_point()+\n  facet_wrap(~ study)+\n  geom_smooth(method = \"lm\", se = F)+\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Aula9_quarto_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n## Regressão linear\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmofo1 <- lm(yld ~ inc,\n            data = wm)\nsummary(mofo1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = yld ~ inc, data = wm)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1657.85  -594.50   -91.32   531.76  1693.15 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 3299.619     56.451  58.451  < 2e-16 ***\ninc           -9.261      2.108  -4.393 1.45e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 745.8 on 380 degrees of freedom\nMultiple R-squared:  0.04833,\tAdjusted R-squared:  0.04582 \nF-statistic:  19.3 on 1 and 380 DF,  p-value: 1.452e-05\n```\n:::\n:::\n\n\nAjustando o conjunto de dados ao modelo linear, foi obtido uma taxa de redução de -9.261.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(broom)\nmofo2 <- wm |> \n  group_by(study) |> \n  do(tidy(lm(.$yld ~ .$inc), conf.int = TRUE))\n\ndf<- mofo2 |> \n  filter(term == \".$inc\")\nmean(df$estimate)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -19.52932\n```\n:::\n\n```{.r .cell-code}\n#Histograma da produtividade quando incidência é 0\np1 <- mofo2 |> \n  filter(term == \"(Intercept)\") |> \n           ggplot(aes(x = estimate))+\n           geom_histogram(bins = 8, color = \"white\", fill = \"gray\")+\n           theme_r4pde()+\n           labs(x = \"Intercept\", y = \"frequency\")\np2 <- mofo2 |> \n  filter(term == \".$inc\") |> \n           ggplot(aes(x = estimate))+\n           geom_histogram(bins = 8, color = \"white\", fill = \"gray\")+\n           theme_r4pde()+\n           labs(x = \"Slopes\", y = \"frequency\")\nlibrary(patchwork)\np1+p2\n```\n\n::: {.cell-output-display}\n![](Aula9_quarto_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\nUm outro ajuste de modelo foi utilizado para o conjunto de dados, considerando desa vez um efeito aleatório de incidência por estudos.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(lme4)\nmofo3 <- lmer(yld ~ inc + (inc|study), data = wm, REML = F)\nsummary(mofo3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nLinear mixed model fit by maximum likelihood  ['lmerMod']\nFormula: yld ~ inc + (inc | study)\n   Data: wm\n\n     AIC      BIC   logLik deviance df.resid \n  5319.4   5343.1  -2653.7   5307.4      376 \n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.7078 -0.5991 -0.0295  0.5077  3.2364 \n\nRandom effects:\n Groups   Name        Variance  Std.Dev. Corr \n study    (Intercept) 557573.08 746.708       \n          inc             36.85   6.071  -0.29\n Residual              37228.73 192.947       \nNumber of obs: 382, groups:  study, 35\n\nFixed effects:\n            Estimate Std. Error t value\n(Intercept) 3455.432    128.063   26.98\ninc          -17.236      1.451  -11.88\n\nCorrelation of Fixed Effects:\n    (Intr)\ninc -0.300\noptimizer (nloptwrap) convergence code: 0 (OK)\nModel failed to converge with max|grad| = 0.416806 (tol = 0.002, component 1)\n```\n:::\n:::\n\nEsta estimativa de taxa de redução de -17 é muito mais confiável, uma vez que os outros métodos subestimam os valores.\n\nA incidência está causando uma redução na produtividade de -17kg (à medida que a incidência aumenta, a produtividade diminui em 17kg)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nAnova(mofo3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAnalysis of Deviance Table (Type II Wald chisquare tests)\n\nResponse: yld\n     Chisq Df Pr(>Chisq)    \ninc 141.09  1  < 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n:::\n\n```{.r .cell-code}\nconfint(mofo3, method = \"Wald\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                 2.5 %     97.5 %\n.sig01              NA         NA\n.sig02              NA         NA\n.sig03              NA         NA\n.sigma              NA         NA\n(Intercept) 3204.43403 3706.43096\ninc          -20.08046  -14.39219\n```\n:::\n:::\n\n\n# Regressão quadrática\n\nA regressão quadrática é usada em modelos quadráticos, ou seja, modelos de segundo grau. Ao invés de regressões lineares, esses modelos formam regressões curvi-lineares.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nestande <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=401662555\")\n```\n:::\n\n\nA partir do gráfico importado, foi filtrado apenas o experimento 2 para realizar a regressão quadrática.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexp2 <- estande |> \n  filter (exp == 2)\n```\n:::\n\n\n## Visualização dos dados\n\nO gráfico montado apresenta tanto a linha de tendência ajustada no modelo linear quanto a linha de tendência ajustada no modelo quadrático, usando a função `geom_smooth()` e o argumento `formula = y ~poly(x,2)`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexp2 |> \n  ggplot(aes(trat, nplants))+\n  geom_point()+\n  ylim(0,100)+\n  geom_smooth(method = lm, se = FALSE,\n              formula = y ~poly(x,2))+ #Modelo quadrático\n  geom_smooth(method = lm, se = F, color = \"red\") #Modelo linear\n```\n\n::: {.cell-output-display}\n![](Aula9_quarto_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n## Regressão\n\nPara comparar qual é o melhor ajuste de modelo que representa o conjunto de dados, foi realizado o modelo de primeira ordem e de segunda ordem e depois eles foram comparados usando a função `AIC()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexp2$trat2 <- exp2$trat^2 #Foi elevado ao quadrado para realizar o modelo quadrático, adicionar um coeficiente\n\n\n#Primeira ordem\nlm2 <- lm(nplants ~ trat,\n          data = exp2)\nsummary(lm2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = nplants ~ trat, data = exp2)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-25.7816  -7.7150   0.5653   8.1929  19.2184 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  60.9857     3.6304  16.798 4.93e-14 ***\ntrat         -0.7007     0.1605  -4.365 0.000247 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 12.95 on 22 degrees of freedom\nMultiple R-squared:  0.4641,\tAdjusted R-squared:  0.4398 \nF-statistic: 19.05 on 1 and 22 DF,  p-value: 0.0002473\n```\n:::\n\n```{.r .cell-code}\n#Segunda ordem ou quadrático\nlm3 <- lm(nplants ~ trat + trat2,\n          data = exp2)\nsummary(lm3) #R deu 0.49 --> explica melhor a variação dos dados se comparado ao de primeira ordem\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = nplants ~ trat + trat2, data = exp2)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-25.439  -6.019   1.789   8.016  19.561 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 66.30156    4.42097  14.997 1.08e-12 ***\ntrat        -1.77720    0.58467  -3.040  0.00623 ** \ntrat2        0.02223    0.01166   1.906  0.07036 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 12.24 on 21 degrees of freedom\nMultiple R-squared:  0.5432,\tAdjusted R-squared:  0.4997 \nF-statistic: 12.49 on 2 and 21 DF,  p-value: 0.0002675\n```\n:::\n\n```{.r .cell-code}\nAIC(lm2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 194.9597\n```\n:::\n\n```{.r .cell-code}\nAIC(lm3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 193.1284\n```\n:::\n:::\n\n\nPelo valor do AIC, observa-se que o modelo quadrático melhor representa o conjunto de dados.\n\nPara formular a função do modelo quadrático, é preciso observar os valores informados no `summary()`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(lm3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = nplants ~ trat + trat2, data = exp2)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-25.439  -6.019   1.789   8.016  19.561 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 66.30156    4.42097  14.997 1.08e-12 ***\ntrat        -1.77720    0.58467  -3.040  0.00623 ** \ntrat2        0.02223    0.01166   1.906  0.07036 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 12.24 on 21 degrees of freedom\nMultiple R-squared:  0.5432,\tAdjusted R-squared:  0.4997 \nF-statistic: 12.49 on 2 and 21 DF,  p-value: 0.0002675\n```\n:::\n:::\n\n\nA função do modelo quadrático é y = 66,3 - 1,77xtrat + 0,02xtrat^2\n\n## Usando o pacote AgroR\n\nAtravés do pacote `AgroR`, é possível criar os modelos de maneira mais fácil usando a função `polynomial()` e especificando o grau do modelo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(AgroR)\n\nwith(exp2, polynomial(trat, nplants, grau = 1))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n----------------------------------------------------\nRegression Models\n----------------------------------------------------\n              Estimate Std. Error   t value     Pr(>|t|)\n(Intercept) 60.9857143  3.6304377 16.798447 4.929311e-14\ntrat        -0.7006912  0.1605226 -4.365063 2.473272e-04\n\n----------------------------------------------------\nDeviations from regression\n----------------------------------------------------\n          Df      SSq       MSQ        F      p-value\nLinear     1 3196.203 3196.2031 21.82329 0.0001899378\nDeviation  4 1054.172  263.5430  1.79944 0.1729687460\nResidual  18 2636.250  146.4583                      \n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n```\n:::\n\n::: {.cell-output-display}\n![](Aula9_quarto_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n\n```{.r .cell-code}\nwith(exp2, polynomial(trat, nplants, grau = 2))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n----------------------------------------------------\nRegression Models\n----------------------------------------------------\n               Estimate Std. Error   t value     Pr(>|t|)\n(Intercept) 66.30156250 4.42096799 14.997069 1.079972e-12\ntrat        -1.77719814 0.58467380 -3.039640 6.230050e-03\nI(trat^2)    0.02222876 0.01165948  1.906496 7.036247e-02\n\n----------------------------------------------------\nDeviations from regression\n----------------------------------------------------\n          Df       SSq       MSQ         F      p-value\nLinear     1 3196.2031 3196.2031 21.823293 0.0001899378\nQuadratic  1  544.5029  544.5029  3.717801 0.0697619482\nDeviation  3  509.6690  169.8897  1.159986 0.3523240106\nResidual  18 2636.2500  146.4583                       \n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n```\n:::\n\n::: {.cell-output-display}\n![](Aula9_quarto_files/figure-html/unnamed-chunk-29-2.png){width=672}\n:::\n\n```{.r .cell-code}\nwith(exp2, polynomial(trat, nplants, grau = 3))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n----------------------------------------------------\nRegression Models\n----------------------------------------------------\n                Estimate  Std. Error   t value     Pr(>|t|)\n(Intercept) 70.265143802 5.300440019 13.256474 2.295186e-11\ntrat        -3.609380523 1.514625525 -2.383018 2.720299e-02\nI(trat^2)    0.140522077 0.091192577  1.540938 1.390058e-01\nI(trat^3)   -0.001712445 0.001309648 -1.307561 2.058546e-01\n\n----------------------------------------------------\nDeviations from regression\n----------------------------------------------------\n          Df       SSq       MSQ          F      p-value\nLinear     1 3196.2031 3196.2031 21.8232929 0.0001899378\nQuadratic  1  544.5029  544.5029  3.7178008 0.0697619482\nCubic      1  247.7520  247.7520  1.6916208 0.2097934169\nDeviation  2  261.9170  130.9585  0.8941691 0.4263523326\nResidual  18 2636.2500  146.4583                        \n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n```\n:::\n\n::: {.cell-output-display}\n![](Aula9_quarto_files/figure-html/unnamed-chunk-29-3.png){width=672}\n:::\n:::\n\n\nNormalmente não se utiliza o modelo de grau 3, pois não dá para explicar biologicamente a razão do dado estar aumentando e diminuindo.\n\n# Regressão não-linear\n\nQuando não é possível ajustar o conjunto de dados em um modelo linear ou quadrático, tem-se a regressão não-linear.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npyra <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=465348652\")\n```\n:::\n\n\nO conjunto de dados importado acima tem duas replicatas para cada nível de fator, para que facilite a sua análise, será agrupado as replicatas em um único dado, pegando a média deles.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npyra2 <- pyra |> \n  group_by(code, state, dose) |> \n  summarise(mean_germination = mean(germination))\n```\n:::\n\n\n## Visualização dos dados\n\n\n::: {.cell}\n\n```{.r .cell-code}\npyra2 |> \n  ggplot(aes(dose, mean_germination))+\n  geom_point()+\n  geom_smooth(span = 3, se = FALSE)+\n  facet_wrap(~code)\n```\n\n::: {.cell-output-display}\n![](Aula9_quarto_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n\nNota-se que o conjunto de dados não segue o modelo linear e nem o modelo quadrático.\n\n## Calculando EC50 (redução da germinação em 50%)\n\nComo o conjunto de dados envolve a aplicação de produto em diferentes doses para o controle de germinação do fungo, é possível calcular o EC50, ou seja, a dose em que a redução da germinação é de 50%. Para isso foi usado o pacote `drc` e a função `ED()`. Todavia, antes de se calcular a EC50, é preciso ajustar o conjunto de dados em um modelo não-linear, usando a função `drm()` e o argumento `fct = LL.3()` (log-logistic de 3 parâmetros).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(drc)\n\nisolado165 <- pyra2 |> \n  filter(code == \"165\")\n\ndrc1 <- drm(mean_germination ~ dose, data = isolado165,\n            fct = LL.3())\nAIC(drc1) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 31.55522\n```\n:::\n\n```{.r .cell-code}\nplot(drc1) #Para visualizar se o ajuste está bom\n```\n\n::: {.cell-output-display}\n![](Aula9_quarto_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n\n```{.r .cell-code}\nED(drc1, 50, interval = \"delta\") #O interval = delta fornece o intervalo de confiança\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nEstimated effective doses\n\n       Estimate Std. Error   Lower   Upper\ne:1:50  0.55840    0.11420 0.19498 0.92182\n```\n:::\n:::\n\n\nPara o isolado 165, estima-se o EC50 no valor de dose 0.55\n\nÉ possível estimar o EC50 de mais de um isolado ao mesmo tempo usando o pacote `ec50estimator` e a função `estimate_EC50()`. Novamente foi usado o argumento `fct = drc::LL.3()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ec50estimator)\n\ndf_ec50 <- estimate_EC50(mean_germination ~ dose,\n                         data = pyra2,\n                         isolate_col = \"code\",\n                         interval = \"delta\",\n                         fct = drc::LL.3())\ndf_ec50\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      ID strata   Estimate  Std..Error        Lower     Upper\n1    152        0.44435629 0.077789240  0.196796213 0.6919164\n2    153        0.20379664 0.042373512  0.068945217 0.3386481\n3    164        0.50775844 0.047248266  0.357393370 0.6581235\n4    165        0.55839613 0.114195113  0.194976315 0.9218159\n5    169        0.14722311 0.009555688  0.116812646 0.1776336\n6    170        0.37503889 0.043207328  0.237533889 0.5125439\n7    186        0.57975744 0.013332268  0.537328208 0.6221867\n8    187        0.21563338 0.036639446  0.099030315 0.3322365\n9    188        0.15297172 0.004284691  0.139335920 0.1666075\n10   189        0.53106193 0.023130936  0.457448972 0.6046749\n11 FGT05        0.04483862 0.019290890 -0.016553601 0.1062308\n12 FGT06        0.54497946 0.034834602  0.434120211 0.6558387\n13 FGT07        0.88770053 0.079917704  0.633366725 1.1420343\n14 FGT28        0.22608141 0.033600742  0.119148854 0.3330140\n15 FGT29        0.23601652 0.034933881  0.124841318 0.3471917\n16 FGT33        0.10481627 0.013065221  0.063236910 0.1463956\n17 FGT34        0.14773114 0.047003373 -0.001854568 0.2973169\n18 FGT35        0.20315392 0.038984604  0.079087515 0.3272203\n19 FGT42        0.45000559 0.059685890  0.260058448 0.6399527\n20 FGT43        0.49589549 0.060850771  0.302241178 0.6895498\n```\n:::\n:::\n\n\nPode-se também criar um gráfico que permite visualizar quais isolados são mais sensíveis e quais são menos sensíveis ao produto.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_ec50 |> \n  ggplot(aes(reorder(ID, Estimate), Estimate))+\n  geom_point()+\n  geom_errorbar(aes(ymin = Lower, ymax = Upper))+\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](Aula9_quarto_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Aula9_quarto_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}