{
  "hash": "e50d3ab339ec27fc9966934f47b04948",
  "result": {
    "markdown": "---\ntitle: \"Análise exploratória 1\"\nformat: html\nmessage: false\nwarning: false\n---\n\n\n# Criação de gráficos\n\nApós a importação de um conjunto de dados, uma **análise exploratória** com montagem de gráficos pode ser feita com o objetivo de analisar e resumir os dados. Para a criação do gráfico, pode ser usada a função `ggplot()` do pacote `tidyverse`. Dentro dessa função, é possível ir modificando o gráfico como desejar por meio dos seus argumentos. Usa-se o argumento `aes()`para especificar qual das variáveis irá compor o eixo X e eixo Y do gráfico. Por exemplo, ao colocar `aes(trat,comp)` está especificando que a variável `trat` representará o eixo X e a variável `comp` representará o eixo Y.\n\nPara continuar adicionando funções dentro de um mesmo pipe, deve-se colocar o sinal `+`. O tipo de gráfico que será criado dependerá da função `geom_`, podendo ser um gráfico de pontos se usar `geom_point()` ou um gráfico boxplot se usar `geom_boxplot()`. Há também vários outros tipos que podem ser utilizados dependendo da função.\n\n# Tipos de gráficos\n\n-   **Gráfico de pontos**: Os pontos são usados para representar cada valor da variável resposta em função do eixo X, que pode ser um fator numérico ou categórico. Esse tipo de gráfico pode ser formado pelas funções `geom_point()` ou `geom_jitter()`.\n\n-   **Gráfico de colunas ou barras**: Os gráficos de barras ou colunas são uma forma de representar valores numéricos associados a categorias. Podem ser usados para representar frequências de fatores. A função `geom_col()` é usada para criar esse tipo de gráfico.\n\n-   **Gráfico de dispersão**: Representam uma (ou várias) variáveis numéricas (ditas dependentes) no eixo Y em função de outra no eixo X (dita independente). Esse tipo de gráfico pode ser formado pela função `geom_point()`.\n\n-   **Gráfico boxplot**: Os boxplots servem para visualizar a distribuição de valores de uma variável numérica mostrando algumas medidas de estatística descritiva de forma gráfica. O boxplot típico é formado por uma linha central que representa a mediana, uma zona retangular cujo lado superior é dado pelo terceiro quartil e o inferior pelo primeiro quartil e um traço superior e inferior que representam, respectivamente, os valores máximos e mínimos. O boxplot é criado usando a função `geom_boxplot()`.\n\n-   **Histograma**: Os histogramas são gráficos bastante simples que permitem caracterizar a distribuição de frequência de valores de uma variável. Nos histogramas, a altura de cada retângulo é proporcional ao número de observações do intervalo de valores na base. O histograma pode ser criado usando a função `geom_histogram()`.\n\n-   **Gráfico de linhas**: Muito comum para uma resposta numérica contínua em um fator quantitativo (como dose) ou temporal (de tempo). Para esse gráfico é usado a função `geom_line()`.\n\n-   **Gráfico errorbar**: Gráfico de pontos ou de colunas que apresentam uma faixa de variabilidade ou barra de erro. Essa variabilidade por ser desvio padrão, erro padrão ou intervalo de confiança. Pode ser criado usando a função `geom_errorbar()`\n\n# Conjunto de dados 1\n\nNesse primeiro conjunto de dados (importado a partir do Google Sheets), está sendo trabalhado uma variável resposta (comprimento de plantas) em função de dois tratamentos diferentes: a aplicação de Mg2 e o controle (sem aplicação de Mg2).\n\nO primeiro passo é a importação dos dados e o carregamento dos pacotes que serão utilizados.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(gsheet)\n\ndados <- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=983033137#gid=983033137\")\n```\n:::\n\n\nCom esse conjunto de dados, pode-se trabalhar com 2 análises exploratórias diferentes: o gráfico de pontos e o boxplot.\n\n## Trabalhando com o gráfico de pontos\n\nDentro da função `geom_point`, determina-se a cor dos pontos com o argumento `color =`, o formato dos pontos com o argumento `shape =` e o tamanho dos pontos com o argumento `size =`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng1 <- dados|>\n  ggplot(aes(trat, comp))+\n  geom_point(color = \"black\", shape = 2, size = 3)\ng1\n```\n\n::: {.cell-output-display}\n![](Aula4_quarto_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n### Temas e legendas\n\nOutras adições que podem ser feitas com o gráfico é modificar o seu tema e adicionar títulos e legendas. Existem diversas funções para modificar o tema do gráfico, entre eles o `theme_classic()` ou então o `theme_bw()`. Para adicionar algum texto no gráfico, usa-se a função `labs()`, com isso pode-se adicionar um nome para o eixo X e para o eixo Y e também adicionar um título para o gráfico e uma legenda.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng1 + theme_classic() +\n  labs(x = \"Tratamento\",\n       y = \"Comprimento\",\n       title = \"Meu primeiro ggplot\",\n       caption = \"Fonte: Dados diversos\")\n```\n\n::: {.cell-output-display}\n![](Aula4_quarto_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n## Trabalhando com boxplot\n\nAlém do `geom_point()` é possível usar também o `geom_boxplot()` para criar um gráfico boxplot ou o `geom_jitter()` para criar um gráfico de pontos separados, não agrupados. No `geom_boxplot()` tem os argumentos `outlier.colour = NA` para não duplicar o outlier e o `fill =` para adicionar uma cor ao quadrado do boxplot.\n\nNo `geom_jitter()` pode ser usado os argumentos `width =` para modificar a largura, `color =` para mudar a cor, `shape =` para mudar o formato e `size =` para mudar o tamanho dos pontos.\n\nAs funções `ylim()` e `scale_y_continuous()` podem ser usados para definir ou delimitar os valores que aparecem no eixo Y.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng2 <- dados |> \n  ggplot(aes(trat, comp))+\n  geom_boxplot(outlier.colour = NA,\n               fill = \"orange\")+\n  geom_jitter(width = 0.05, \n              color = \"black\",\n              shape = 1,\n              size = 3) \n\ng2 + theme_classic()+\n  labs(x = \"Tratamento\",\n       y = \"Comprimento (mm)\",\n       title = \"Meu primeiro ggplot\",\n       caption = \"Fonte: Dados diversos\")+\n  ylim(0,20) +\n  scale_y_continuous(limits = c(0,20),\n                     n.breaks = 10)\n```\n\n::: {.cell-output-display}\n![](Aula4_quarto_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n# Conjunto de dados 2\n\nO segundo conjunto de dados está em um link na web no formato *csv*, que foi importado usando a função `read_csv()`.\n\nPara uma breve descrição dos conteúdos do dado, pode ser usado a função `glimpse()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncr <- read_csv(\"https://raw.githubusercontent.com/emdelponte/paper-coffee-rust-Ethiopia/master/data/survey_clean.csv\")\n\nglimpse(cr)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 405\nColumns: 13\n$ farm            <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,…\n$ region          <chr> \"SNNPR\", \"SNNPR\", \"SNNPR\", \"SNNPR\", \"SNNPR\", \"SNNPR\", …\n$ zone            <chr> \"Bench Maji\", \"Bench Maji\", \"Bench Maji\", \"Bench Maji\"…\n$ district        <chr> \"Debub Bench\", \"Debub Bench\", \"Debub Bench\", \"Debub Be…\n$ lon             <dbl> 35.44250, 35.44250, 35.42861, 35.42861, 35.42861, 35.3…\n$ lat             <dbl> 6.904722, 6.904722, 6.904444, 6.904444, 6.904444, 6.90…\n$ altitude        <dbl> 1100, 1342, 1434, 1100, 1400, 1342, 1432, 1100, 1400, …\n$ cultivar        <chr> \"Local\", \"Mixture\", \"Mixture\", \"Local\", \"Local\", \"Mixt…\n$ shade           <chr> \"Sun\", \"Mid shade\", \"Mid shade\", \"Sun\", \"Sun\", \"Mid sh…\n$ cropping_system <chr> \"Plantation\", \"Plantation\", \"Plantation\", \"Plantation\"…\n$ farm_management <chr> \"Unmanaged\", \"Minimal\", \"Minimal\", \"Unmanaged\", \"Unman…\n$ inc             <dbl> 86.70805, 51.34354, 43.20000, 76.70805, 47.15808, 51.3…\n$ sev2            <dbl> 55.57986, 17.90349, 8.25120, 46.10154, 12.25167, 19.91…\n```\n:::\n:::\n\n\nPode-se observar que o trabalho envolve a incidência e severidade da doença da ferrugem do café em 405 fazendas diferentes. A incidência é a presença ou ausência da doença no material que foi amostrado, enquanto que a severidade é a quantidade de doença presente na amostra com incidência positiva.\n\nEsse conjunto de dados envolve 2 principais fatores: a região (SNNPR e Oromia) e a cultivar (Improved, Mixture e Local).\n\nA análise exploratória pode ser trabalhada com as duas variáveis respostas.\n\n## Trabalhando com histogramas sobre a incidência\n\nPara visualizar esse conjunto de dados, pode ser feito uma análise exploratória utilizando o histograma. O histograma serve para visualizar uma distribuição contínua apresentado as frequências de determinados resultados. Para criar o histograma, usa-se a função `ggplot()` juntamente com `geom_histogram()`. Como o conjunto de dados se refere a 2 regiões diferentes, pode-se realizar um histograma por região usando o `facet_wrap(~region)`, dessa forma as duas regiões ficam separadas.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncr |> \n  ggplot(aes(x = inc))+\n  geom_histogram()+\n  facet_wrap(~region)\n```\n\n::: {.cell-output-display}\n![](Aula4_quarto_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n## Trabalhando com boxplot sobre a incidência\n\nTambém pode ser observado os dados através de um gráfico em boxplot. Cria-se esse gráfico com a função `geom_boxplot()`. O boxplot irá fornecer a variação de dados observados de uma variável numérica por meio de quartis, sendo que a caixa é delimitada pelo primeiro e terceiro quartil e a linha dentro da caixa representa a mediana.\n\nOs valores da mediana e do primeiro e terceiro quartil podem ser encontrados através da função `summary()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncr |> \n  ggplot(aes(y = inc))+\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](Aula4_quarto_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\nsummary(cr$inc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   9.50   19.43   32.50   34.89   48.20   86.71 \n```\n:::\n:::\n\n\n## Sumário da incidência\n\nPara observar valores como média, desvio padrão e mediana, pode ser usado a função `summerise()`e os argumentos `mean()`, `sd()` e `median()`. Mas antes disso, será agrupado os dados pela região, separando dessa forma as duas regiões diferentes novamente. Isso pode ser feito com a função `group_by()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncr |> \n  group_by(region) |> \n  summarise(inc_mean = mean(inc),\n            sd_mean = sd(inc),\n            inc_med = median(inc))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 4\n  region inc_mean sd_mean inc_med\n  <chr>     <dbl>   <dbl>   <dbl>\n1 Oromia     37.0    14.6    39.5\n2 SNNPR      33.4    18.9    29.6\n```\n:::\n:::\n\n\nPosteriormente, também foi feito a sumarização agrupando os dados à nível de cultivar.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncr |> \n  group_by(cultivar) |> \n  summarise(inc_mean = mean(inc),\n            sd_mean = sd(inc),\n            inc_med = median(inc))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 4\n  cultivar inc_mean sd_mean inc_med\n  <chr>       <dbl>   <dbl>   <dbl>\n1 Improved     16.4    5.66    15.2\n2 Local        53.4   14.3     50.9\n3 Mixture      31.9   11.2     31.6\n```\n:::\n:::\n\n\n## Trabalhando com gráfico de dispersão entre incidência e severidade\n\nTambém pode ser criado um gráfico de dispersão para mostrar a relação entre incidência e severidade, usando a função `geom_point()`. O gráfico de dispersão de pontos é um tipo de gráfico que pode ser utilizado quando as variáveis X e Y são contínuas e apresentam relação entre as respostas.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncr |> \n  ggplot(aes(inc, sev2))+\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](Aula4_quarto_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nPor meio desse gráfico, é possível observar que conforme a incidência aumenta, a severidade também aumenta.\n\n## Trabalhando com histogramas e sumário de severidade\n\nDo mesmo modo, foi feito um histograma sobre a variável severidade separando as duas regiões.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncr |> \n  ggplot(aes(x = sev2))+\n  geom_histogram()+\n  facet_wrap(~region)\n```\n\n::: {.cell-output-display}\n![](Aula4_quarto_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nTambém foi feito a sumarização da severidade agrupando os dados à nível de cultivar.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncr |> \n  group_by(cultivar) |> \n  summarise(sev_mean = mean(sev2),\n            sev_sd = sd(sev2),\n            sev_med = median(sev2))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 4\n  cultivar sev_mean sev_sd sev_med\n  <chr>       <dbl>  <dbl>   <dbl>\n1 Improved     2.16   1.82    1.64\n2 Local       18.7   11.1    17.2 \n3 Mixture      6.47   4.35    5.43\n```\n:::\n:::\n\n\nAo criar um histograma sobre a variável severidade agrupando os dados em função da cultivar, pode-se notar que a distribuição da severidade é mais simétrica\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncr |> \n  ggplot(aes(x = sev2))+\n  geom_histogram()+\n  facet_wrap(~cultivar)\n```\n\n::: {.cell-output-display}\n![](Aula4_quarto_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n## Trabalhando com histograma sobre severidade por região e cultivar\n\nPara comparar os histogramas de severidade agrupados por região e por cultivar, pode-se colocar o argumento `facet_grid(region ~ cultivar)`. Desse modo, ele irá criar um histograma para cada relação entre os níveis de região e cultivar.\n\nNo gráfico abaixo foi utilizado a função `scale_fill_colorblind()` do pacote `ggthemes` para adicionar cores ao gráfico.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggthemes)\n\ncr |> \n  ggplot(aes(x = sev2, fill = region))+\n  geom_histogram(color = \"white\")+\n  facet_grid(region ~ cultivar)+\n  scale_fill_colorblind()+\n  theme_minimal(base_size = 14)+\n  theme(legend.position = \"bottom\")+\n  labs(y = \"Frequency\",\n       x = \"Severity (%)\", fill = \"Region\")\n```\n\n::: {.cell-output-display}\n![](Aula4_quarto_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n## Criando subconjuntos com select e filter\n\nA função `select()` é feita para selecionar colunas, enquanto a função `filter()` é feita para filtrar linhas. Usando essas funções do pacote `dplyr`, será criado subconjuntos: o primeiro irá agrupar os dados sobre as fazendas, cultivares e severidade referentes à região de Oromia enquanto que o segundo irá agrupar essas mesmas informações referentes à região de SNNPR.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Subconjunto Oromia\ncr_oromia <- cr |> \n  select(farm, region, cultivar, sev2) |> \n  filter(region == \"Oromia\")\ncr_oromia\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 165 × 4\n    farm region cultivar  sev2\n   <dbl> <chr>  <chr>    <dbl>\n 1   286 Oromia Mixture   7.63\n 2   287 Oromia Mixture   9.39\n 3   288 Oromia Mixture   1.30\n 4   289 Oromia Mixture   9.79\n 5   290 Oromia Local    18.5 \n 6   291 Oromia Mixture  13.2 \n 7   292 Oromia Mixture   5.60\n 8   293 Oromia Mixture   1.06\n 9   294 Oromia Local    17.6 \n10   295 Oromia Mixture  15.4 \n# ℹ 155 more rows\n```\n:::\n\n```{.r .cell-code}\n# Subconjunto SNNPR\ncr_pr <- cr |> \n  select(farm, region, cultivar, sev2) |> \n  filter(region == \"SNNPR\")\ncr_pr\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 240 × 4\n    farm region cultivar  sev2\n   <dbl> <chr>  <chr>    <dbl>\n 1     1 SNNPR  Local    55.6 \n 2     2 SNNPR  Mixture  17.9 \n 3     3 SNNPR  Mixture   8.25\n 4     4 SNNPR  Local    46.1 \n 5     5 SNNPR  Local    12.3 \n 6     6 SNNPR  Mixture  19.9 \n 7     7 SNNPR  Mixture  11.9 \n 8     8 SNNPR  Local    55.6 \n 9     9 SNNPR  Local    11.6 \n10    10 SNNPR  Mixture  11.4 \n# ℹ 230 more rows\n```\n:::\n:::\n\n\n## Visualização dos subconjuntos\n\nTendo criado os subconjuntos, foi feito um gráfico boxplot para a visualização de cada um deles.\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- cr_oromia |> \n  ggplot(aes(cultivar, sev2, fill = cultivar))+\n  geom_boxplot()+\n  coord_flip()+\n  labs(x = \"Cultivar\",\n       y = \"Severity (%)\")\np1\n```\n\n::: {.cell-output-display}\n![](Aula4_quarto_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n\n```{.r .cell-code}\np2 <- cr_pr |> \n  ggplot(aes(cultivar, sev2, fill = cultivar))+\n  geom_boxplot()+\n  coord_flip()+\n  labs(x = \"Cultivar\",\n       y = \"Severity (%)\")\np2\n```\n\n::: {.cell-output-display}\n![](Aula4_quarto_files/figure-html/unnamed-chunk-16-2.png){width=672}\n:::\n:::\n\n\n## Juntando gráficos com o patchwork\n\nAtravés do pacote `patchwork`, é possível juntar dois ou mais gráficos em uma única imagem. Os gráficos podem ficar um do lado do outro\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(patchwork)\n\np1 + p2\n```\n\n::: {.cell-output-display}\n![](Aula4_quarto_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\nOu também um em cima do outro.\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 / p2\n```\n\n::: {.cell-output-display}\n![](Aula4_quarto_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\nPara que os gráficos compartilhem a mesma legenda e o mesmo nome dos eixos, pode ser usado as funções `plot_layout()` e `plot_annotation()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(p1 / p2) + \n  plot_layout(guides = \"collect\",\n              axes = \"collect\")+\n  plot_annotation(tag_levels = 'A')\n```\n\n::: {.cell-output-display}\n![](Aula4_quarto_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\nAdicionando as funções `theme_few()` e `scale_fill_few()` é possível alterar o tema e as cores do gráfico.\n\n\n::: {.cell}\n\n```{.r .cell-code}\np11 <- cr_oromia |> \n  ggplot(aes(cultivar, sev2, fill = cultivar))+\n  geom_boxplot()+\n  theme_few()+           #Para mudar o formato/estilo do gráfico\n  scale_fill_few()+   #Para mudar a cor\n  coord_flip()+\n  labs(x = \"Cultivar\",\n       y = \"Severity (%)\")\np11\n```\n\n::: {.cell-output-display}\n![](Aula4_quarto_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n\n```{.r .cell-code}\np22 <- cr_pr |> \n  ggplot(aes(cultivar, sev2, fill = cultivar))+\n  geom_boxplot()+\n  theme_few()+           #Para mudar o formato/estilo do gráfico\n  scale_fill_few()+   #Para mudar a cor\n  coord_flip()+\n  labs(x = \"Cultivar\",\n       y = \"Severity (%)\")\np22\n```\n\n::: {.cell-output-display}\n![](Aula4_quarto_files/figure-html/unnamed-chunk-20-2.png){width=672}\n:::\n:::\n\n\nColocando título e fonte na imagem.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(p11 / p22) + \n  plot_layout(guides = \"collect\",\n              axes = \"collect\")+\n  plot_annotation(title = \"Coffe rust in Ethiopia\",\n                  caption = \"Source: Del Ponte (2022)\",\n                  tag_levels = 'A')\n```\n\n::: {.cell-output-display}\n![](Aula4_quarto_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n## Colocando um gráfico dentro de outro\n\nUsando ainda o pacote `patchwork`, é possível inserir um gráfico dentro de outro gráfico.\n\n\n::: {.cell}\n\n```{.r .cell-code}\np3 <- cr_oromia |> \n  ggplot(aes(x = sev2))+\n  geom_histogram()\n\np1 + inset_element(p3, left = 0.6, bottom = 0.6, right = 1, top = 1)\n```\n\n::: {.cell-output-display}\n![](Aula4_quarto_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n# Salvar imagens\n\nPara salvar o último gráfico rodado no R, pode-se utilizar a função `ggsave()` especificando o nome com que o arquivo será salvo e a cor de fundo da imagem. A imagem será salva dentro da pasta contendo o RStudio Project.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng1 + theme_classic()+\n  labs(x = \"Tratamento\",\n       y = \"Comprimento (mm)\",\n       title = \"Meu primeiro ggplot\",\n       caption = \"Fonte: Dados diversos\")+\n  scale_y_continuous(limits = c(0,20),\n                     n.breaks = 10)\n```\n\n::: {.cell-output-display}\n![](Aula4_quarto_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(\"plot1.png\", bg = \"white\")\n```\n:::\n",
    "supporting": [
      "Aula4_quarto_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}