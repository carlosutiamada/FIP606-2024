{
  "hash": "cb35ffd294bc9b307a7f74cd8ecfdd06",
  "result": {
    "markdown": "---\ntitle: \"Aula 1\"\nauthor: \"Carlos\"\nformat: html\nwarning: false\nmessage: false\n---\n\n\n# Aprendendo a utilizar o R Quarto Markdown\n\nNessa primeira aula aprendemos a criar e utilizar o R Quarto Markdown e vimos algumas funções básicas do R.\n\n## R Quarto Markdown\n\nO **Quarto** é uma versão mais avançada e atualizada do R Markdown, incluindo dezenas de novos recursos e sendo capaz de renderizar a maioria dos arquivos `.Rmd` existentes sem modificação, possibilitando a criação de relatórios ou textos em diferentes formatos (HTML, PDF, Word e outros).\n\nPara a criação de um documento R Quarto Markdown, deve-se clicar em *New File* e posteriormente em *Quarto Document*. Após nomear o arquivo e escolher o formato em que ele será renderizado, ele estará pronto para ser usado\n\n## RStudio Project\n\nUma forma de manter o trabalho organizado é usando o **RStudio Projects**. Ele mantém todos os scripts, documentos e dados em um único lugar, deixando-os separados de outros arquivos e projetos. Isso permite trabalhar com diferentes projetos ao mesmo tempo sem um interferir no outro.\n\nPara criar um novo projeto, é necessário clicar em *File*, depois *New Project*, escolher um *directory* existente ou criar um novo e nomear o projeto.\n\n## Chunk\n\nAntes de tudo, para que possamos utilizar o R Quarto Markdown e executar pedaços de códigos que serão integrados ao documento, devemos criar um **chunk**. O **chunk** permite que as funções e demais códigos sejam executadas e rodadas no documento. Um atalho que pode ser usado para sua criação é o Ctrl + Alt + I.\n\n## Texto\n\nDurante a escrita, podemos colocar palavras em *itálico* usando 1 asterisco, do mesmo modo podemos colocar palavras em **negrito** usando 2 asteriscos.\n\nDentro de um chunk, podemos colocar palavras e/ou frases entre aspas ou com um `#` na frente para que ele seja rodado como um texto, e não como dado.\n\n## Atribuição de Valores\n\nQuando queremos atribuir um valor para algum nome, podemos utilizar `<-`. Desse modo, se quisermos trabalhar com esses valores ou conjunto de valores atribuídos a um nome, podemos utilizar diretamente o nome, sem precisar repetir o valor.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- 10\nx\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 10\n```\n:::\n\n```{.r .cell-code}\ny <- x*10\ny\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 100\n```\n:::\n\n```{.r .cell-code}\nz <- x*y\nz\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1000\n```\n:::\n:::\n\n\n## Conjunto de valores e data frame\n\nPara criar um conjunto de valores, pode-se utilizar `c()`e colocar os valores desejados. Caso os valores sejam contínuos, pode-se agrupá-los usando `:`, desse modo o conjunto será formado por todos os valores que estão entre os dois números colocados.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nA <- c(1:10)\nA\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1]  1  2  3  4  5  6  7  8  9 10\n```\n:::\n\n```{.r .cell-code}\nB <- c(11:20)\nB\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] 11 12 13 14 15 16 17 18 19 20\n```\n:::\n:::\n\n\nO *data frame* é uma estrutura em que os dados podem ser organizados em formato de tabela. Ele pode ser criado por meio da junção de dois ou mais conjunto de dados, usando a função `data.frame()`, mas, para isso, o número de valores presentes nos conjuntos deve ser o mesmo.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- data.frame(A,B)\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    A  B\n1   1 11\n2   2 12\n3   3 13\n4   4 14\n5   5 15\n6   6 16\n7   7 17\n8   8 18\n9   9 19\n10 10 20\n```\n:::\n:::\n\n\n## Package, library e help\n\nOs *packages* ou pacotes são conjunto de funções, dados e documentações que podem ser instalados a fim de estender a funcionalidade do R. Para instalar novos pacotes, usamos a função `install.packages()`e chamamos o nome do pacote desejado.\n\nPara que o pacote instalado seja ativado e possa ser utilizado no nosso documento, é necessário chamá-lo pela função `library()`.\n\nPara tirar dúvida de como um pacote funciona e quais são as funções e dados presentes dentro dele, pode-se utilizar `?` com o nome do pacote para aparecer todas as informações pertinentes sobre ele. Para aprender sobre uma determinada função, pode-se utilizar também `??`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(agricolae)\n??audpc\ndates<-c(14,21,28) # days\n# example 1: evaluation - vector\nevaluation<-c(40,80,90)\naudpc(evaluation,dates)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nevaluation \n      1015 \n```\n:::\n:::\n\n\n## Pipe\n\nQuando quisermos que todas as funções executadas estejam se referindo a um determinado *data frame* sem precisar chamá-lo repetidamente, podemos usar um **pipe**. O pipe, executado por `|>`ou `%>%`, indica que todas as funções abaixo dele estão se referindo ao *data frame* especificado. Um atalho para a criação do pipe é Ctrl + Shift + M.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf2 <- cars\ncars\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   speed dist\n1      4    2\n2      4   10\n3      7    4\n4      7   22\n5      8   16\n6      9   10\n7     10   18\n8     10   26\n9     10   34\n10    11   17\n11    11   28\n12    12   14\n13    12   20\n14    12   24\n15    12   28\n16    13   26\n17    13   34\n18    13   34\n19    13   46\n20    14   26\n21    14   36\n22    14   60\n23    14   80\n24    15   20\n25    15   26\n26    15   54\n27    16   32\n28    16   40\n29    17   32\n30    17   40\n31    17   50\n32    18   42\n33    18   56\n34    18   76\n35    18   84\n36    19   36\n37    19   46\n38    19   68\n39    20   32\n40    20   48\n41    20   52\n42    20   56\n43    20   64\n44    22   66\n45    23   54\n46    24   70\n47    24   92\n48    24   93\n49    24  120\n50    25   85\n```\n:::\n\n```{.r .cell-code}\ndf2$dist2 <- c(1:50) # O $ é usado para criar uma nova coluna dentro do df2\ndf2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   speed dist dist2\n1      4    2     1\n2      4   10     2\n3      7    4     3\n4      7   22     4\n5      8   16     5\n6      9   10     6\n7     10   18     7\n8     10   26     8\n9     10   34     9\n10    11   17    10\n11    11   28    11\n12    12   14    12\n13    12   20    13\n14    12   24    14\n15    12   28    15\n16    13   26    16\n17    13   34    17\n18    13   34    18\n19    13   46    19\n20    14   26    20\n21    14   36    21\n22    14   60    22\n23    14   80    23\n24    15   20    24\n25    15   26    25\n26    15   54    26\n27    16   32    27\n28    16   40    28\n29    17   32    29\n30    17   40    30\n31    17   50    31\n32    18   42    32\n33    18   56    33\n34    18   76    34\n35    18   84    35\n36    19   36    36\n37    19   46    37\n38    19   68    38\n39    20   32    39\n40    20   48    40\n41    20   52    41\n42    20   56    42\n43    20   64    43\n44    22   66    44\n45    23   54    45\n46    24   70    46\n47    24   92    47\n48    24   93    48\n49    24  120    49\n50    25   85    50\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\ndf2 |>\n  mutate(dist3 = dist2+1) |> \n  select(1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   speed\n1      4\n2      4\n3      7\n4      7\n5      8\n6      9\n7     10\n8     10\n9     10\n10    11\n11    11\n12    12\n13    12\n14    12\n15    12\n16    13\n17    13\n18    13\n19    13\n20    14\n21    14\n22    14\n23    14\n24    15\n25    15\n26    15\n27    16\n28    16\n29    17\n30    17\n31    17\n32    18\n33    18\n34    18\n35    18\n36    19\n37    19\n38    19\n39    20\n40    20\n41    20\n42    20\n43    20\n44    22\n45    23\n46    24\n47    24\n48    24\n49    24\n50    25\n```\n:::\n:::\n\n\n# Renderização\n\nPara transformar esse documento `.qmd` em HTML ou em outros formatos, é necessário renderizar o documento. Para isso basta clicar no **Render** para que o documento ou site seja criado.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}