prod
fer <- soja |>
ggplot(aes(TRAT, FER))+
geom_jitter(width = 0.1)+
stat_summary(fun.data = "mean_cl_boot", color = "black")
fer
dfc <- soja |>
ggplot(aes(TRAT, DFC))+
geom_jitter(width = 0.1, color = "gray70")+
stat_summary(fun.data = "mean_cl_boot", color = "black")
dfc
fer <- soja |>
ggplot(aes(TRAT, FER))+
geom_jitter(width = 0.1, color = "gray70")+
stat_summary(fun.data = "mean_cl_boot", color = "blue")
fer
prod <- soja |>
ggplot(aes(TRAT, PROD))+
geom_jitter(width = 0.1, color = "gray70")+
stat_summary(fun.data = "mean_cl_boot", color = "green")
prod
prod <- soja |>
ggplot(aes(TRAT, PROD))+
geom_jitter(width = 0.1, color = "gray70")+
stat_summary(fun.data = "mean_cl_boot", color = "red")
prod
library(patchwork)
dfc / fer / prod
anova(aov_dfc)
aov_dfc <- lm(DFC ~ TRAT+BLOCO,
data = soja)
anova(aov_dfc)
library(performance)
check_heteroscedasticity(aov_dfc)
check_normality(aov_dfc)
check_heteroscedasticity(aov_dfc)
check_normality(aov_dfc)
library(emmeans)
medias_dfc <- emmeans(aov_dfc, ~ TRAT)
library(multcomp)
library(multcompView)
cld(medias_dfc, Letters = letters)
aov_prod <- lm(PROD ~ TRAT+BLOCO,
data = soja)
anova(aov_prod)
check_heteroscedasticity(aov_prod) #Variância é homogênea
check_normality(aov_prod) #Há normalidade
medias_prod <- emmeans(aov_prod, ~ TRAT)
medias_prod
pwpm(medias_prod)
cld(medias_prod, Letters = letters)
medias_prod_grupo <- cld(medias_prod, Letters = letters)
cld(medias_prod, Letters = letters)
soja <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=866852711")
soja <- soja |>
mutate(TRAT = as.factor(TRAT),
BLOCO = as.factor(BLOCO))
dfc <- soja |>
ggplot(aes(TRAT, DFC))+
geom_jitter(width = 0.1, color = "gray70")+
stat_summary(fun.data = "mean_cl_boot", color = "black")
dfc
fer <- soja |>
ggplot(aes(TRAT, FER))+
geom_jitter(width = 0.1, color = "gray70")+
stat_summary(fun.data = "mean_cl_boot", color = "blue")
fer
prod <- soja |>
ggplot(aes(TRAT, PROD))+
geom_jitter(width = 0.1, color = "gray70")+
stat_summary(fun.data = "mean_cl_boot", color = "red")
prod
library(patchwork)
dfc / fer / prod
aov_dfc <- lm(DFC ~ TRAT+BLOCO,
data = soja)
anova(aov_dfc)
check_heteroscedasticity(aov_dfc)
check_normality(aov_dfc)
medias_dfc <- emmeans(aov_dfc, ~ TRAT)
cld(medias_dfc, Letters = letters)
soja <- soja |>
mutate(FER2 = log(FER))
aov_fer2 <- lm(FER2 ~ TRAT+BLOCO,
data = soja)
anova(aov_fer2)
check_normality(aov_fer2)
check_heteroscedasticity(aov_fer2) #Ainda não é homogêneo, mas iremos considerar como homogêneo
#Tentando arrumar a normalidade por Lambda
b <- boxcox(lm(soja$FER ~ 1))
lambda <- b$x[which.max(b$y)]
lambda
soja$FER3 <- (soja$FER ^ lambda - 1)/ lambda
aov_fer3 <- lm(FER3 ~ TRAT+BLOCO,
data = soja)
anova(aov_fer3)
check_normality(aov_fer3)
check_heteroscedasticity(aov_fer3)
medias_fer2 <- emmeans(aov_fer2, ~ TRAT)
medias_fer2
pwpm(medias_fer2)
cld(medias_fer2, Letters = letters)
anova(aov_fer2)
anova(aov_fer)
aov_fer <- lm(FER ~ TRAT+BLOCO,
data = soja)
anova(aov_fer)
check_heteroscedasticity(aov_fer) #Variância não é homogênea
check_normality(aov_fer) #Não há normalidade
b <- boxcox(lm(soja$FER ~ 1))
lambda <- b$x[which.max(b$y)]
lambda
soja$FER3 <- (soja$FER ^ lambda - 1)/ lambda
aov_fer3 <- lm(FER3 ~ TRAT+BLOCO,
data = soja)
anova(aov_fer3)
check_normality(aov_fer3)
check_heteroscedasticity(aov_fer3)
medias_fer2 <- emmeans(aov_fer2, ~ TRAT)
medias_fer2
pwpm(medias_fer2)
cld(medias_fer2, Letters = letters)
aov_prod <- lm(PROD ~ TRAT+BLOCO,
data = soja)
anova(aov_prod)
check_heteroscedasticity(aov_prod)
check_normality(aov_prod)
medias_prod <- emmeans(aov_prod, ~ TRAT)
medias_prod
pwpm(medias_prod)
cld(medias_prod, Letters = letters)
medias_prod_grupo <- cld(medias_prod, Letters = letters)
df_prod <- data.frame(medias_prod_grupo)
df_prod |>
ggplot(aes(TRAT, emmean))+
geom_point()+
ylim(3000,6500)+
geom_errorbar(aes(min = lower.CL,
max = upper.CL),
width = 0.1)+
annotate(geom = "text", x = 1.1, y = 4200, label = "A")+
annotate(geom = "text", x = 2.1, y = 5000, label = "AB")
knitr::kable(df_prod |> dplyr::select(TRAT, emmean, .group))
library(writexl)
df_prod |>
ggplot(aes(TRAT, emmean))+
geom_point()+
ylim(3000,6500)+
geom_errorbar(aes(min = lower.CL,
max = upper.CL),
width = 0.1)+
annotate(geom = "text", x = 1.1, y = 4200, label = "A")+
annotate(geom = "text", x = 2.3, y = 5000, label = "AB")
df_prod |>
ggplot(aes(TRAT, emmean))+
geom_point()+
ylim(3000,6500)+
geom_errorbar(aes(min = lower.CL,
max = upper.CL),
width = 0.1)+
annotate(geom = "text", x = 1.2, y = 4200, label = "A")+
annotate(geom = "text", x = 2.3, y = 5000, label = "AB")
curve <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=1807247585")
curve = as.data.frame(curve)
View(curve)
curve |>
group_by(day) |>
summarise(severity_mean = mean(severity),
severity_sd = sd(severity)) |>
ggplot(aes(day, severity_mean))+
geom_point(width = 0.05)+
geom_line()
curve |>
group_by(day, Irrigation) |>
summarise(severity_mean = mean(severity),
severity_sd = sd(severity)) |>
ggplot(aes(day, severity_mean, color = Irrigation))+
geom_point(width = 0.05)+
geom_line()
curve |>
group_by(day, Irrigation) |>
summarise(severity_mean = mean(severity)) |>
ggplot(aes(day, severity_mean))+
geom_point(width = 0.05)+
geom_line()+
facet_grid(~Irrigation)
library(epifitter)
audpc <- curve |>
group_by(Irrigation, rep) |>
summarise(aacpd = AUDPC(day, severity))
aov_audpc <- lm(aacpd ~ Irrigation + factor(rep),
data = audpc)
anova(aov_audpc)
aov_curve <- lm(severity ~ Irrigation*day + rep,
data = curve)
anova(aov_curve)
library(agricolae)
cv.model(aov_audpc) #coeficiente de variação, que é o desvio padrão dividido por 100
milho <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=1345524759")
View(milho)
milho |>
ggplot(aes(method, index))+
geom_jitter(width = 0.1, color = "black", alpha = 0.2)+
facet_grid(~hybrid)+
stat_summary(fun.data = "mean_cl_boot", color = "blue")
milho |>
ggplot(aes(method, yield))+
geom_jitter(width = 0.1, color = "black", alpha = 0.2)+
facet_grid(~hybrid)+
stat_summary(fun.data = "mean_cl_boot", color = "red")
library(lme4)
milho <- milho |>
mutate(block = as.factor(block))
mix <- lmer(index ~ hybrid*method + block + (1|block/hybrid),
data = milho)
library(car)
Anova(mix)
library(car)
Anova(mix)
check_normality(mix)
check_heteroscedasticity(mix)
plot(simulateResiduals(mix))
mix2 <- lmer(sqrt(index) ~ hybrid*method + block + (1|block/hybrid),
data = milho)
Anova(mix2)
plot(simulateResiduals(mix2))
check_normality(mix2)
check_heteroscedasticity(mix2)
qqnorm(residuals(mix2))
qqline(residuals(mix2))
hist(residuals(mix2))
medias_milho <- emmeans(mix2,
~hybrid|method,
type = "response") #Qaundo transforma dados, precisa colocar type = response
medias_milho2 <- emmeans(mix2,
~method|hybrid,
type = "response")
cld(medias_milho, Letters = LETTERS)
cld(medias_milho2, Letters = letters)
mix3 <- lmer(sqrt(yield) ~ hybrid*method + block + (1|block/hybrid),
data = milho)
Anova(mix3)
mix3 <- lmer(sqrt(yield) ~ hybrid*method + block + (1|block/hybrid),
data = milho)
Anova(mix3)
check_normality(mix3)
check_heteroscedasticity(mix3)
medias_milho3 <- emmeans(mix3,
~hybrid|method)
medias_milho4 <- emmeans(mix3,
~method|hybrid)
cld(medias_milho3, Letters = LETTERS)
cld(medias_milho4, Letters = letters)
library(gsheet)
estande <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=401662555")
View(estande)
estande |>
ggplot(aes(trat, nplants))+
geom_jitter(width = 0.1, color = "gray")+
facet_wrap(~exp)+
stat_summary(fun.data = "mean_cl_boot", color = "blue")+
geom_smooth(method = "lm", se = F) #se = F tira a banda de confiança
estande |>
ggplot(aes(trat, nplants, color = factor(exp)))+
geom_jitter(width = 0.1, color = "gray")+
stat_summary(fun.data = "mean_cl_boot", color = "blue")+
geom_smooth(method = "lm", se = F)
estande |>
ggplot(aes(trat, nplants))+
geom_jitter(width = 0.1, color = "gray")+
facet_wrap(~exp)+
stat_summary(fun.data = "mean_cl_boot", color = "blue")+
geom_smooth(method = "lm", se = F) #se = F tira a banda de confiança
exp1 |>
ggplot(aes(trat, nplants))+
geom_point()+
ylim(0,100)+
geom_smooth(se = F)
exp1 <- estande |>
filter(exp == 1)
exp1 |>
ggplot(aes(trat, nplants))+
geom_point()+
ylim(0,100)+
geom_smooth(se = F)
exp1 |>
ggplot(aes(trat, nplants))+
geom_point()+
ylim(0,100)+
geom_smooth(se = F)
lm1 <- lm(nplants ~ trat,
data = exp1)
summary(lm1)
glm1 <- glm(nplants ~ trat,
family = "gaussian",
data = exp1)
summary(glm1) #A família gaussiana é o mesmo que o método "lm", resulta em taxa de redução -0.24 tbm
exp2 |>
ggplot(aes(trat, nplants))+
geom_point()+
ylim(0,100)+
geom_smooth(method = lm, se = F)
exp2 <- estande |>
filter (exp == 2)
exp2 |>
ggplot(aes(trat, nplants))+
geom_point()+
ylim(0,100)+
geom_smooth(method = lm, se = F)
lm2 <- lm(nplants ~ trat,
data = exp2)
summary(lm2)
glm2 <- glm(nplants ~ trat,
family = "gaussian",
data = exp2)
summary(glm2)
AIC(glm2)
glm2b <- glm(nplants ~ trat,
family = poisson(link = "log"),
data = exp2)
summary(glm2b)
AIC(glm2b)
exp3 |>
ggplot(aes(trat, nplants))+
geom_point()+
ylim(0,100)+
geom_smooth(method = lm, se = F)
exp3 <- estande |>
filter (exp == 3)
exp3 |>
ggplot(aes(trat, nplants))+
geom_point()+
ylim(0,100)+
geom_smooth(method = lm, se = F)
lm3 <- lm(nplants ~ trat,
data = exp3)
summary(lm3)
residuals(lm3)
hist(residuals(lm3))
hist(residuals(lm2))
#Se transformar o log dos tratamentos, os dados ficarão mais linearizado (diminui a curva)
exp3 |>
ggplot(aes(log(trat), nplants))+
geom_point()+
ylim(0,100)+
geom_smooth(se = F)
glm3 <- glm(nplants ~ trat,
family = "gaussian",
data = exp3)
summary(glm3)
AIC(glm3)
glm3b <- glm(nplants ~ trat,
family = poisson(link = "log"),
data = exp3)
summary(glm3b)
AIC(glm3b) #melhor qualidade de ajuste, quanto menor é melhor (mais ajustado)
AIC(glm2)
AIC(glm2b)
library(lme4)
glm4 <- glmer(nplants ~ trat + (trat|exp),
family = "gaussian",
data = estande)
summary(glm4)
AIC(glm4)
glm4b <- glmer(nplants ~ trat + (trat|exp),   #(trat|exp) é o efeito aleatório
family = poisson(link = "log"),
data = estande)
AIC(glm4b)
library(r4pde)
wm <- WhiteMoldSoybean
wm |>
ggplot(aes(inc, yld, group = factor(study)))+
geom_point()+
#facet_wrap(~ study)+
geom_smooth(method = "lm", se = F)+
theme_minimal()
wm |>
ggplot(aes(inc, yld, group = factor(study)))+
geom_point()+
facet_wrap(~ study)+
geom_smooth(method = "lm", se = F)+
theme_minimal()
mofo1 <- lm(yld ~ inc,
data = wm)
summary(mofo1) #Modelo global
library(broom)
mofo2 <- wm |>
group_by(study) |>
do(tidy(lm(.$yld ~ .$inc), conf.int = TRUE))
mofo2
df<- mofo2 |>
filter(term == ".$inc")
mean(df$estimate)
#Histograma da produtividade quando incidência é 0
p1 <- mofo2 |>
filter(term == "(Intercept)") |>
ggplot(aes(x = estimate))+
geom_histogram(bins = 8, color = "white", fill = "gray")+
theme_r4pde()+
labs(x = "Intercept", y = "frequency")
p2 <- mofo2 |>
filter(term == ".$inc") |>
ggplot(aes(x = estimate))+
geom_histogram(bins = 8, color = "white", fill = "gray")+
theme_r4pde()+
labs(x = "Slopes", y = "frequency")
p1+p2
library(lme4)
mofo3 <- lmer(yld ~ inc + (inc|study), data = wm, REML = F)
summary(mofo3)
Anova(mofo3)
confint(mofo3, method = "Wald")
summary(mofo1)
summary(mofo3)
exp2 |>
ggplot(aes(trat, nplants))+
geom_point()+
ylim(0,100)+
geom_smooth(method = lm, se = FALSE,
formula = y ~poly(x,2))+ #Modelo quadrático
geom_smooth(method = lm, se = F, color = "red") #Modelo linear
lm2 <- lm(nplants ~ trat,
data = exp2)
summary(lm2) #A medida que aumenta o eixo X, diminui o estande em -0.7
exp2$trat2 <- exp2$trat^2 #Foi elevado ao quadrado para realizar o modelo quadrático, adicionar um coeficiente
#Primeira ordem
lm2 <- lm(nplants ~ trat,
data = exp2)
summary(lm2)
#Segunda ordem ou quadrático
lm3 <- lm(nplants ~ trat + trat2,
data = exp2)
summary(lm3) #R deu 0.49 --> explica melhor a variação dos dados se comparado ao de primeira ordem
AIC(lm2)
AIC(lm3) #Quanto menor o valor, melhor é o modelo
with(exp2, polynomial(trat, nplants, grau = 1))
library(AgroR)
with(exp2, polynomial(trat, nplants, grau = 1))
with(exp2, polynomial(trat, nplants, grau = 2))
with(exp2, polynomial(trat, nplants, grau = 3))
pyra <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=465348652")
View(pyra)
pyra2 <- pyra |>
group_by(code, state, dose) |>
summarise(mean_germination = mean(germination))
pyra2 |>
ggplot(aes(dose, mean_germination))+
geom_point()+
geom_smooth(span = 3, se = FALSE)+
facet_wrap(~code)
library(drc)
isolado165 <- pyra2 |>
filter(code == "165")
isolado165 <- pyra2 |>
filter(code == "165")
drc1 <- drm(mean_germination ~ dose, data = isolado165,
fct = LL.3())
AIC(drc1) #Para comparar diferentes modelos (fct), o W1.3 pode ser melhor para alguns isolados
plot(drc1) #Para visualizar se o ajuste está bom
ED(drc1, 50, interval = "delta") #Estima o EC50 no valor 0.55 | O interval = delta fornece o intervalod de confiança
library(ec50estimator)
df_ec50 <- estimate_EC50(mean_germination ~ dose,
data = pyra2,
isolate_col = "code",
interval = "delta",
fct = drc::LL.3())
df_ec50
df_ec50 |>
ggplot(aes(reorder(ID, Estimate), Estimate))+
geom_point()+
geom_errorbar(aes(ymin = Lower, ymax = Upper))+
coord_flip()
library(tidyverse)
library(gsheet)
library(dplyr)
imgs <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=373270992")
imgs |>
pivot_longer(3:5, names_to = "method",
values_to = "value") |>
ggplot(aes(method, value))+
geom_boxplot()
imgs |>
ggplot(aes(Assess, LeafDoctor))+
geom_point()+
geom_smooth(method = "lm")
imgs |>
ggplot(aes(Assess, ImageJ))+
geom_point()+
geom_smooth(method = "lm")
imgs |>
ggplot(aes(LeafDoctor, ImageJ))+
geom_point()+
geom_smooth(method = "lm")
imgs2 <- imgs |>
select(Assess, LeafDoctor,ImageJ)
imgs2 <- imgs[, c("Assess", "LeafDoctor", "ImageJ")]
cor(imgs$Assess, imgs$LeafDoctor) #Dá o valor do coeficiente de correlação
cor.test(imgs$Assess, imgs$LeafDoctor) #Mais completo, fornece o coeficiente de correlação, intervalo de confiança e p-valor (Ho : coeficiente de relação = 0)
imgs2 <- imgs[, c("Assess", "LeafDoctor", "ImageJ")]
library(AgroR)
corgraph(imgs2) #fornece matriz de correlação, com dados do coeficiente de correlação e a significância entre cada variável
library(corrplot)
cor_imgs2 <- cor(imgs2)
corrplot(cor_imgs2, method = "number", type = "lower")
corrplot(cor_imgs2, method = "circle", type = "lower")
campo2 <- campo |>
select(DFC, FER, PROD)
campo <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=866852711")
campo2 <- campo |>
select(DFC, FER, PROD)
campo2 <- campo[, c("DFC", "FER", "PROD")]
corgraph(campo2)
